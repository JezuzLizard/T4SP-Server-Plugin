#pragma once

#ifdef __cplusplus
namespace game
{
#endif

	enum DvarFlags : unsigned __int16
	{
		DVAR_FLAG_NONE = 0x0,
		DVAR_FLAG_ARCHIVE = 0x1,
		DVAR_FLAG_USERINFO = 0x2,
		DVAR_FLAG_SERVERINFO = 0x4,
		DVAR_FLAG_SYSTEMINFO = 0x8,
		DVAR_FLAG_INIT = 0x10,
		DVAR_FLAG_LATCH = 0x20,
		DVAR_FLAG_ROM = 0x40,
		DVAR_FLAG_CHEAT = 0x80,
		DVAR_FLAG_CONFIG = 0x100,
		DVAR_FLAG_SAVED = 0x200,
		DVAR_FLAG_NORESTART = 0x400,
		DVAR_FLAG_UNK3 = 0x800,
		DVAR_FLAG_CHANGEABLE_RESET = 0x1000,
		DVAR_FLAG_UNK4 = 0x2000,
		DVAR_FLAG_EXTERNAL = 0x4000,
		DVAR_FLAG_AUTOEXEC = 0x8000,
	};

	enum dvarType_t : __int8
	{
		DVAR_TYPE_BOOL = 0x0,
		DVAR_TYPE_FLOAT = 0x1,
		DVAR_TYPE_FLOAT_2 = 0x2,
		DVAR_TYPE_FLOAT_3 = 0x3,
		DVAR_TYPE_FLOAT_4 = 0x4,
		DVAR_TYPE_INT = 0x5,
		DVAR_TYPE_ENUM = 0x6,
		DVAR_TYPE_STRING = 0x7,
		DVAR_TYPE_COLOR = 0x8,
		DVAR_TYPE_COUNT = 0x9,
	};

	enum DvarSetSource : __int32
	{
		DVAR_SOURCE_INTERNAL = 0x0,
		DVAR_SOURCE_EXTERNAL = 0x1,
		DVAR_SOURCE_SCRIPT = 0x2,
	};

	enum netadrtype_t : __int32
	{
		NA_BOT = 0x0,
		NA_BAD = 0x1,
		NA_LOOPBACK = 0x2,
		NA_BROADCAST = 0x3,
		NA_IP = 0x4,
	};

	enum netsrc_t : __int32
	{
		NS_CLIENT1 = 0x0,
		NS_SERVER = 0x1,
		NS_MAXCLIENTS = 0x1,
		NS_PACKET = 0x2,
	};

	enum meansOfDeath_t : __int32
	{
		MOD_UNKNOWN = 0x0,
		MOD_PISTOL_BULLET = 0x1,
		MOD_RIFLE_BULLET = 0x2,
		MOD_GRENADE = 0x3,
		MOD_GRENADE_SPLASH = 0x4,
		MOD_PROJECTILE = 0x5,
		MOD_PROJECTILE_SPLASH = 0x6,
		MOD_MELEE = 0x7,
		MOD_BAYONET = 0x8,
		MOD_HEAD_SHOT = 0x9,
		MOD_CRUSH = 0xA,
		MOD_TELEFRAG = 0xB,
		MOD_FALLING = 0xC,
		MOD_SUICIDE = 0xD,
		MOD_TRIGGER_HURT = 0xE,
		MOD_EXPLOSIVE = 0xF,
		MOD_IMPACT = 0x10,
		MOD_BURNED = 0x11,
		MOD_HIT_BY_OBJECT = 0x12,
		MOD_DROWN = 0x13,
		MOD_NUM = 0x14,
	};

	enum entityFlag_t
	{
		FL_GODMODE = 0x1,
		FL_DEMI_GODMODE = 0x2,
		FL_NOTARGET = 0x4,
		FL_NO_KNOCKBACK = 0x8,
		FL_DROPPED_ITEM = 0x10,
		FL_NO_BOTS = 0x20,
		FL_NO_HUMANS = 0x40,
		FL_TOGGLE = 0x80,
		FL_SOFTACTIVATE = 0x100,
		FL_LOW_PRIORITY_USEABLE = 0x200,
		FL_NO_TACTICAL_INSERTION = 0x400,
		FL_DYNAMICPATH = 0x800,
		FL_SUPPORTS_LINKTO = 0x1000,
		FL_NO_AUTO_ANIM_UPDATE = 0x2000,
		FL_GRENADE_TOUCH_DAMAGE = 0x4000,
		FL_GRENADE_MARTYRDOM = 0x8000,
		FL_MISSILE_DESTABILIZED = 0x10000,
		FL_STABLE_MISSILES = 0x20000,
		FL_REPEAT_ANIM_UPDATE = 0x40000,
		FL_VEHICLE_TARGET = 0x80000,
		FL_GROUND_ENT = 0x100000,
		FL_CURSOR_HINT = 0x200000,
		FL_USE_TURRET = 0x400000,
		FL_MISSILE_ATTRACTOR = 0x800000,
		FL_TARGET = 0x1000000,
		FL_WEAPON_BEING_GRABBED = 0x2000000,
		FL_OBSTACLE = 0x4000000,
		FL_DODGE_LEFT = 0x8000000,
		FL_DODGE_RIGHT = 0x10000000,
		FL_BADPLACE_VOLUME = 0x20000000,
		FL_AUTO_BLOCKPATHS = 0x40000000,
		FL_MOVER_SLIDE = 0x80000000,
	};

	enum dFlag_t
	{
		DAMAGE_RADIUS = 0x1,
		DAMAGE_NO_ARMOR = 0x2,
		DAMAGE_NO_KNOCKBACK = 0x4,
		DAMAGE_NO_PROTECTION = 0x8,
	};

	enum svc_ops_e : __int32
	{
		svc_nop = 0x0,
		svc_gamestate = 0x1,
		svc_configstring = 0x2,
		svc_baseline = 0x3,
		svc_entitycache = 0x4,
		svc_dynentstate = 0x5,
		svc_destructiblestate = 0x6,
		svc_ropestate = 0x7,
		svc_serverCommand = 0x8,
		svc_download = 0x9,
		svc_snapshot = 0xA,
		svc_EOF = 0xB,
	};

	enum svscmd_type : __int32
	{
		SV_CMD_CAN_IGNORE = 0x0,
		SV_CMD_RELIABLE = 0x1,
	};

	enum clientconn_e
	{
		CS_FREE = 0x0,
		CS_ZOMBIE = 0x1,
		CS_CONNECTED = 0x2,
		CS_PRIMED = 0x3,
		CS_ACTIVE = 0x4,
	};

	enum serverState_t : __int32
	{
		SS_DEAD = 0x0,
		SS_LOADING = 0x1,
		SS_GAME = 0x2,
	};

	enum DvarFlags32 : unsigned __int32
	{
		DVAR_FLAG32_NONE = 0x0,
		DVAR_FLAG32_ARCHIVE = 0x1,
		DVAR_FLAG32_USERINFO = 0x2,
		DVAR_FLAG32_SERVERINFO = 0x4,
		DVAR_FLAG32_SYSTEMINFO = 0x8,
		DVAR_FLAG32_INIT = 0x10,
		DVAR_FLAG32_LATCH = 0x20,
		DVAR_FLAG32_ROM = 0x40,
		DVAR_FLAG32_CHEAT = 0x80,
		DVAR_FLAG32_CONFIG = 0x100,
		DVAR_FLAG32_SAVED = 0x200,
		DVAR_FLAG32_NORESTART = 0x400,
		DVAR_FLAG32_UNK3 = 0x800,
		DVAR_FLAG32_CHANGEABLE_RESET = 0x1000,
		DVAR_FLAG32_UNK4 = 0x2000,
		DVAR_FLAG32_EXTERNAL = 0x4000,
		DVAR_FLAG32_AUTOEXEC = 0x8000,
	};

	enum dvarType32_t : __int32
	{
		DVAR_TYPE32_BOOL = 0x0,
		DVAR_TYPE32_FLOAT = 0x1,
		DVAR_TYPE32_FLOAT_2 = 0x2,
		DVAR_TYPE32_FLOAT_3 = 0x3,
		DVAR_TYPE32_FLOAT_4 = 0x4,
		DVAR_TYPE32_INT = 0x5,
		DVAR_TYPE32_ENUM = 0x6,
		DVAR_TYPE32_STRING = 0x7,
		DVAR_TYPE32_COLOR = 0x8,
		DVAR_TYPE32_COUNT = 0x9,
	};

	enum connstate_t : __int32
	{
		CA_DISCONNECTED = 0x0,
		CA_CINEMATIC = 0x1,
		CA_UICINEMATIC = 0x2,
		CA_LOGO = 0x3,
		CA_CONNECTING = 0x4,
		CA_CHALLENGING = 0x5,
		CA_CONNECTED = 0x6,
		CA_SENDINGSTATS = 0x7,
		CA_LOADING = 0x8,
		CA_PRIMED = 0x9,
		CA_ACTIVE = 0xA,
		CA_MAP_RESTART = 0xB,
	};

	enum sessionState_t : __int32
	{
		SESS_STATE_PLAYING = 0x0,
		SESS_STATE_DEAD = 0x1,
		SESS_STATE_SPECTATOR = 0x2,
		SESS_STATE_INTERMISSION = 0x3,
	};

	enum entityType_t : __int32
	{
		ET_GENERAL = 0x0,
		ET_PLAYER = 0x1,
		ET_PLAYER_CORPSE = 0x2,
		ET_ITEM = 0x3,
		ET_MISSILE = 0x4,
		ET_INVISIBLE = 0x5,
		ET_SCRIPTMOVER = 0x6,
		ET_SOUND_BLEND = 0x7,
		ET_FX = 0x8,
		ET_LOOP_FX = 0x9,
		ET_PRIMARY_LIGHT = 0xA,
		ET_MG42 = 0xB,
		ET_PLANE = 0xC,
		ET_VEHICLE = 0xD,
		ET_VEHICLE_COLLMAP = 0xE,
		ET_VEHICLE_CORPSE = 0xF,
		ET_ACTOR = 0x10,
		ET_ACTOR_SPAWNER = 0x11,
		ET_ACTOR_CORPSE = 0x12,
		ET_EVENTS = 0x13,
	};

	enum con_channel_e
	{
		CON_CHANNEL_DONT_FILTER = 0x0,
		CON_CHANNEL_ERROR = 0x1,
		CON_CHANNEL_GAMENOTIFY = 0x2,
		CON_CHANNEL_BOLDGAME = 0x3,
		CON_CHANNEL_SUBTITLE = 0x4,
		CON_CHANNEL_OBITUARY = 0x5,
		CON_CHANNEL_LOGFILEONLY = 0x6,
		CON_CHANNEL_CONSOLEONLY = 0x7,
		CON_CHANNEL_GFX = 0x8,
		CON_CHANNEL_SOUND = 0x9,
		CON_CHANNEL_FILES = 0xA,
		CON_CHANNEL_DEVGUI = 0xB,
		CON_CHANNEL_PROFILE = 0xC,
		CON_CHANNEL_UI = 0xD,
		CON_CHANNEL_CLIENT = 0xE,
		CON_CHANNEL_SERVER = 0xF,
		CON_CHANNEL_SYSTEM = 0x10,
		CON_CHANNEL_PLAYERWEAP = 0x11,
		CON_CHANNEL_AI = 0x12,
		CON_CHANNEL_ANIM = 0x13,
		CON_CHANNEL_PHYS = 0x14,
		CON_CHANNEL_FX = 0x15,
		CON_CHANNEL_LEADERBOARDS = 0x16,
		CON_CHANNEL_PARSERSCRIPT = 0x17,
		CON_CHANNEL_SCRIPT = 0x18,
		CON_CHANNEL_COOPINFO = 0x19,
		CON_BUILTIN_CHANNEL_COUNT = 0x1A,
	};

	enum parseSkip_t
	{
		SKIP_NO = 0x0,
		SKIP_YES = 0x1,
		SKIP_ALL_ELIFS = 0x2,
	};

	enum UILocalVarType : __int32
	{
		UILOCALVAR_INT = 0x0,
		UILOCALVAR_FLOAT = 0x1,
		UILOCALVAR_STRING = 0x2,
	};

	enum errorParm_t : __int32
	{
		ERR_FATAL = 0x0,
		ERR_DROP = 0x1,
		ERR_SERVERDISCONNECT = 0x2,
		ERR_DISCONNECT = 0x3,
		ERR_SCRIPT = 0x4,
		ERR_SCRIPT_DROP = 0x5,
		ERR_LOCALIZATION = 0x6,
		ERR_MAPLOADERRORSUMMARY = 0x7,
	};

	enum msgLocErrType_t : __int32
	{
		LOCMSG_SAFE = 0x0,
		LOCMSG_NOERR = 0x1,
	};

	enum ConfigStringIndices
	{
		CS_MIN = 0x0,
		CS_SOUNDALIASINDICES = 0x78E,
		CS_CASE_SENSITIVE = 0x585,
		MAX_CONFIGSTRINGS = 0xBF0,
	};

	enum fieldtype_t : __int32
	{
		F_INT = 0x0,
		F_SHORT = 0x1,
		F_BYTE = 0x2,
		F_FLOAT = 0x3,
		F_LSTRING = 0x4,
		F_STRING = 0x5,
		F_VECTOR = 0x6,
		F_ENTITY = 0x7,
		F_ENTHANDLE = 0x8,
		F_ACTOR = 0x9,
		F_SENTIENT = 0xA,
		F_SENTIENTHANDLE = 0xB,
		F_CLIENT = 0xC,
		F_PATHNODE = 0xD,
		F_VECTORHACK = 0xE,
		F_MODEL = 0xF,
		F_OBJECT = 0x10,
		F_ACTORGROUP = 0x11,
		F_BITFLAG = 0x12,
	};

	enum deployableCommand_t
	{
		DEPLOYABLE_CMD_NONE = 0x0,
		DEPLOYABLE_CMD_WATER_SHEETING_FX = 0x21,
		DEPLOYABLE_CMD_ROPE = 0x23,
		DEPLOYABLE_CMD_WATER_PLOP = 0x24,
		DEPLOYABLE_CMD_ELECTRIFIED = 0x28,
		DEPLOYABLE_CMD_TELEPORTED = 0x29,
		DEPLOYABLE_CMD_ENTITY_EVENT = 0x2A,
		DEPLOYABLE_CMD_WATER_DROPS = 0x30,
		DEPLOYABLE_CMD_BRIEFING_POPUP = 0x31,
		DEPLOYABLE_CMD_PHYS_GRAVITY_DIR = 0x32,
		DEPLOYABLE_CMD_CLEAR_CONFIGSTRING_RANGE = 0x33,
		DEPLOYABLE_CMD_DOUBLE_VISION = 0x34,
		DEPLOYABLE_CMD_GENERATE_CLIENT_SAVE = 0x35,
		DEPLOYABLE_CMD_CLIENTSYS_STATE_CHANGE = 0x39,
		DEPLOYABLE_CMD_COMMIT_CLIENT_SAVE = 0x3A,
		DEPLOYABLE_CMD_RESET_CLIENTINFO = 0x3F,
		DEPLOYABLE_CMD_EXPLODER = 0x40,
		DEPLOYABLE_CMD_UNK1 = 0x41,
		DEPLOYABLE_CMD_MAPRESTART_SAVE_PERSIST = 0x42,
		DEPLOYABLE_CMD_SWITCH_OFFHAND = 0x43,
		DEPLOYABLE_CMD_DEACTIVATE_REVERB = 0x44,
		DEPLOYABLE_CMD_SET_CHANNEL_VOLUME = 0x45,
		DEPLOYABLE_CMD_DEACTIVATE_CHANNEL_VOLUME = 0x46,
		DEPLOYABLE_CMD_MENU_SHOW_NOTIFY = 0x4A,
		DEPLOYABLE_CMD_PLAYER_MUTE = 0x4B,
		DEPLOYABLE_CMD_CLOSE_INGAME_MENU = 0x4C,
		DEPLOYABLE_CMD_SET_STAT_CHANGED = 0x4E,
		DEPLOYABLE_CMD_RESET_GUN_PITCH = 0x4F,
		DEPLOYABLE_CMD_START_AMPLIFY = 0x51,
		DEPLOYABLE_CMD_STOP_AMPLIFY = 0x52,
		DEPLOYABLE_CMD_REACHED_CHECKPOINT = 0x53,
		DEPLOYABLE_CMD_RETICLE_START_LOCKON = 0x54,
		DEPLOYABLE_CMD_FADE = 0x55,
		DEPLOYABLE_CMD_OBJECTIVE_STATE = 0x56,
		DEPLOYABLE_CMD_BURN = 0x57,
		DEPLOYABLE_CMD_SLOW_TIMESCALE_OVER_TIME = 0x58,
		DEPLOYABLE_CMD_DEATH_SCREEN = 0x59,
		DEPLOYABLE_CMD_COOP_MESSAGE = 0x5E,
		DEPLOYABLE_CMD_SWITCH_WEAPON = 0x61,
		DEPLOYABLE_CMD_TAKE = 0x61,
		DEPLOYABLE_CMD_PARSE_SCORES = 0x62,
		DEPLOYABLE_CMD_ANNOUNCMENT = 0x63,
		DEPLOYABLE_CMD_CONFIGSTRING_MODIFIED = 0x64,
		DEPLOYABLE_CMD_GAMEMESSAGE = 0x65,
		DEPLOYABLE_CMD_GAMEMESSAGE2 = 0x66,
		DEPLOYABLE_CMD_BOLD_GAMEMESSAGE = 0x67,
		DEPLOYABLE_CMD_CHATMESSAGE = 0x68,
		DEPLOYABLE_CMD_DYN_ENT_DESTROYED = 0x6A,
		DEPLOYABLE_CMD_SYSCMD_EQ = 0x6C,
		DEPLOYABLE_CMD_SVSCMD_EQ_DEACTIVATE = 0x6D,
		DEPLOYABLE_CMD_STOP_LOCAL_SOUND = 0x6B,
		DEPLOYABLE_CMD_MAPRESTART_NO_SAVE_PERSIST = 0x6E,
		DEPLOYABLE_CMD_MUSIC_STOP = 0x70,
		DEPLOYABLE_CMD_SOUND_FADE = 0x71,
		DEPLOYABLE_CMD_ACTIVATE_REVERB = 0x72,
		DEPLOYABLE_CMD_PLAY_LOCAL_SOUND = 0x73,
		DEPLOYABLE_CMD_OPEN_MENU = 0x74,
		DEPLOYABLE_CMD_CLOSE_MENU = 0x75,
		DEPLOYABLE_CMD_SET_CLIENT_DVAR = 0x76,
		DEPLOYABLE_CMD_CL_DISCONNECT = 0x77,
		DEPLOYABLE_CMD_COPY_INTO_BIG_CONFIGSTRING = 0x78,
		DEPLOYABLE_CMD_CONCAT_BIG_CONFIGSTRING = 0x79,
		DEPLOYABLE_CMD_CONCAT_BIG_CONFIGSTRING2 = 0x7A,
		DEPLOYABLE_CMD_SHOW_VIEWMODEL = 0x7B,
		DEPLOYABLE_CMD_FADING_BLUR = 0x7C,
		DEPLOYABLE_CMD_HIDE_VIEWMODEL = 0x7D,
	};

	enum pmtype_t : __int32
	{
		PM_NORMAL = 0x0,
		PM_NORMAL_LINKED = 0x1,
		PM_NOCLIP = 0x2,
		PM_UFO = 0x3,
		PM_SPECTATOR = 0x4,
		PM_INTERMISSION = 0x5,
		PM_LASTSTAND = 0x6,
		PM_REVIVEE = 0x7,
		PM_LASTSTAND_TRANSITION = 0x8,
		PM_DEAD = 0x9,
		PM_DEAD_LINKED = 0xA,
	};

	enum entHandler_t : __int32
	{
		ENT_HANDLER_NULL = 0x0,
		ENT_HANDLER_ACTOR_INIT = 0x1,
		ENT_HANDLER_ACTOR = 0x2,
		ENT_HANDLER_ACTOR_CORPSE = 0x3,
		ENT_HANDLER_TRIGGER_MULTIPLE = 0x4,
		ENT_HANDLER_TRIGGER_HURT = 0x5,
		ENT_HANDLER_TRIGGER_HURT_TOUCH = 0x6,
		ENT_HANDLER_TRIGGER_DAMAGE = 0x7,
		ENT_HANDLER_SCRIPT_MOVER = 0x8,
		ENT_HANDLER_SCRIPT_MODEL = 0x9,
		ENT_HANDLER_GRENADE = 0xA,
		ENT_HANDLER_TIMED_OBJECT = 0xB,
		ENT_HANDLER_ROCKET = 0xC,
		ENT_HANDLER_CLIENT = 0xD,
		ENT_HANDLER_CLIENT_SPECTATOR = 0xE,
		ENT_HANDLER_CLIENT_DEAD = 0xF,
		ENT_HANDLER_PLAYER_CLONE = 0x10,
		ENT_HANDLER_TURRET_INIT = 0x11,
		ENT_HANDLER_TURRET = 0x12,
		ENT_HANDLER_DROPPED_ITEM = 0x13,
		ENT_HANDLER_ITEM_INIT = 0x14,
		ENT_HANDLER_ITEM = 0x15,
		ENT_HANDLER_TRIGGER_USE = 0x16,
		ENT_HANDLER_PRIMARY_LIGHT = 0x17,
		ENT_HANDLER_PLAYER_BLOCK = 0x18,
		ENT_HANDLER_VEHICLE_INIT = 0x19,
		ENT_HANDLER_VEHICLE = 0x1A,
		ENT_HANDLER_VEHICLE_FREE = 0x1B,
		ENT_HANDLER_IK_PLAYERCLIP_TERRAIN = 0x1C,
		ENT_HANDLER_IK_DISABLE_TERRAIN_MAPPING = 0x1D,
		ENT_HANDLER_COUNT = 0x1E,
	};

	enum actor_think_result_t : __int32
	{
		ACTOR_THINK_DONE = 0x0,
		ACTOR_THINK_REPEAT = 0x1,
		ACTOR_THINK_MOVE_TO_BODY_QUEUE = 0x2,
	};

	enum ai_event_t : __int32
	{
		AI_EV_BAD = 0x0,
		AI_EV_FIRST_POINT_EVENT = 0x1,
		AI_EV_FOOTSTEP = 0x2,
		AI_EV_FOOTSTEP_LITE = 0x3,
		AI_EV_NEW_ENEMY = 0x4,
		AI_EV_PAIN = 0x5,
		AI_EV_DEATH = 0x6,
		AI_EV_EXPLOSION = 0x7,
		AI_EV_GRENADE_PING = 0x8,
		AI_EV_PROJECTILE_PING = 0x9,
		AI_EV_GUNSHOT = 0xA,
		AI_EV_SILENCED_SHOT = 0xB,
		AI_EV_LAST_POINT_EVENT = 0xC,
		AI_EV_FIRST_LINE_EVENT = 0xD,
		AI_EV_BULLET = 0xE,
		AI_EV_BLOCK_FRIENDLIES = 0xE,
		AI_EV_PROJECTILE_IMPACT = 0xF,
		AI_EV_LAST_LINE_EVENT = 0x10,
		AI_EV_FIRST_ARC_EVENT = 0x11,
		AI_EV_BADPLACE_ARC = 0x12,
		AI_EV_BADPLACE_LIMITED_ARC = 0x13,
		AI_EV_REALLY_BADPLACE_ARC = 0x14,
		AI_EV_LAST_ARC_EVENT = 0x15,
		AI_EV_FIRST_VOLUME_EVENT = 0x16,
		AI_EV_BADPLACE_VOLUME = 0x17,
		AI_EV_LAST_VOLUME_EVENT = 0x18,
		AI_EV_NUM_EVENTS = 0x19,
	};

	enum loading_t : __int32
	{
		LOADING_DONE = 0x0,
		LOADING_LEVEL = 0x1,
		LOADING_SAVEGAME = 0x2,
	};

	enum objectiveState_t : __int32
	{
		OBJST_EMPTY = 0x0,
		OBJST_ACTIVE = 0x1,
		OBJST_INVISIBLE = 0x2,
		OBJST_DONE = 0x3,
		OBJST_CURRENT = 0x4,
		OBJST_FAILED = 0x5,
		OBJST_NUMSTATES = 0x6,
	};

	enum trType_t : __int32
	{
		TR_STATIONARY = 0x0,
		TR_INTERPOLATE = 0x1,
		TR_LINEAR = 0x2,
		TR_LINEAR_STOP = 0x3,
		TR_SINE = 0x4,
		TR_GRAVITY = 0x5,
		TR_ACCELERATE = 0x6,
		TR_DECELERATE = 0x7,
		TR_PHYSICS = 0x8,
		TR_XDOLL = 0x9,
		TR_FIRST_RAGDOLL = 0xA,
		TR_RAGDOLL = 0xA,
		TR_RAGDOLL_GRAVITY = 0xB,
		TR_RAGDOLL_INTERPOLATE = 0xC,
		TR_LAST_RAGDOLL = 0xC,
		TR_COUNT = 0xD,
	};

	enum WheelEffectState : __int32
	{
		WHEEL_STATE_ROLLING = 0x0,
		WHEEL_STATE_AIRBORN = 0x1,
		WHEEL_STATE_PEELINGOUT = 0x2,
		WHEEL_STATE_SKIDDING = 0x3,
	};

	enum TractionType : __int32
	{
		TRACTION_TYPE_FRONT = 0x0,
		TRACTION_TYPE_BACK = 0x1,
		TRACTION_TYPE_ALL_WD = 0x2,
		NUM_TRACTION_TYPES = 0x3,
	};

	enum OffhandSecondaryClass : __int32
	{
		PLAYER_OFFHAND_SECONDARY_SMOKE = 0x0,
		PLAYER_OFFHAND_SECONDARY_FLASH = 0x1,
		PLAYER_OFFHAND_SECONDARIES_TOTAL = 0x2,
	};

	enum ViewLockTypes : __int32
	{
		PLAYERVIEWLOCK_NONE = 0x0,
		PLAYERVIEWLOCK_FULL = 0x1,
		PLAYERVIEWLOCK_WEAPONJITTER = 0x2,
		PLAYERVIEWLOCKCOUNT = 0x3,
	};

	enum ActionSlotType : __int32
	{
		ACTIONSLOTTYPE_DONOTHING = 0x0,
		ACTIONSLOTTYPE_SPECIFYWEAPON = 0x1,
		ACTIONSLOTTYPE_ALTWEAPONTOGGLE = 0x2,
		ACTIONSLOTTYPE_NIGHTVISION = 0x3,
		ACTIONSLOTTYPECOUNT = 0x4,
	};

	enum he_type_t : __int32
	{
		HE_TYPE_FREE = 0x0,
		HE_TYPE_TEXT = 0x1,
		HE_TYPE_VALUE = 0x2,
		HE_TYPE_SCORE = 0x3,
		HE_TYPE_MATERIAL = 0x4,
		HE_TYPE_TIMER_DOWN = 0x5,
		HE_TYPE_TIMER_UP = 0x6,
		HE_TYPE_TENTHS_TIMER_DOWN = 0x7,
		HE_TYPE_TENTHS_TIMER_UP = 0x8,
		HE_TYPE_CLOCK_DOWN = 0x9,
		HE_TYPE_CLOCK_UP = 0xA,
		HE_TYPE_WAYPOINT = 0xB,
		HE_TYPE_COUNT = 0xC,
	};

	enum clientConnected_t : __int32
	{
		CON_DISCONNECTED = 0x0,
		CON_CONNECTING = 0x1,
		CON_CONNECTED = 0x2,
	};

	enum team_t : __int32
	{
		TEAM_FREE = 0x0,
		TEAM_BAD = 0x0,
		TEAM_AXIS = 0x1,
		TEAM_ALLIES = 0x2,
		TEAM_NEUTRAL = 0x3,
		TEAM_DEAD = 0x4,
		TEAM_NUM_TEAMS = 0x5,
	};

	enum VehicleAnimState : __int32
	{
		VEHICLEANIMSTATE_IDLE = 0x0,
		VEHICLEANIMSTATE_ENTRY = 0x1,
		VEHICLEANIMSTATE_CHANGEPOS = 0x2,
		VEHICLEANIMSTATE_EXIT = 0x3,
		VEHICLEANIMSTATECOUNT = 0x4,
	};

	enum AISpecies : __int32
	{
		AI_SPECIES_HUMAN = 0x0,
		AI_SPECIES_DOG = 0x1,
		MAX_AI_SPECIES = 0x2,
		AI_SPECIES_ALL = 0x2,
	};

	enum ai_state_t : __int32
	{
		AIS_INVALID = 0x0,
		AIS_KEEPCURRENT = 0x0,
		AIS_EXPOSED = 0x1,
		AIS_TURRET = 0x2,
		AIS_GRENADE_RESPONSE = 0x3,
		AIS_BADPLACE_FLEE = 0x4,
		AIS_COVERARRIVAL = 0x5,
		AIS_DEATH = 0x6,
		AIS_DEFAULT = 0x1,
		AIS_SETABLE_FIRST = 0x1,
		AIS_SETABLE_LAST = 0x6,
		AIS_PAIN = 0x7,
		AIS_SCRIPTEDANIM = 0x8,
		AIS_CUSTOMANIM = 0x9,
		AIS_NEGOTIATION = 0xA,
		AIS_PUSHABLE_FIRST = 0x7,
		AIS_PUSHABLE_LAST = 0xA,
		AIS_COUNT = 0xB,
	};

	enum ai_substate_t : __int32
	{
		STATE_EXPOSED_COMBAT = 0x64,
		STATE_EXPOSED_NONCOMBAT = 0x65,
		STATE_EXPOSED_REACQUIRE_MOVE = 0x66,
		STATE_EXPOSED_FLASHBANGED = 0x67,
		STATE_DEATH_PRECLEANUP = 0xC8,
		STATE_DEATH_POSTCLEANUP = 0xC9,
		STATE_GRENADE_FLEE = 0x12C,
		STATE_GRENADE_TAKECOVER = 0x12D,
		STATE_GRENADE_COWER = 0x12E,
		STATE_GRENADE_COMBAT = 0x12F,
		STATE_GRENADE_COVERATTACK = 0x130,
		STATE_GRENADE_ACQUIRE = 0x131,
		STATE_GRENADE_THROWBACK = 0x132,
	};

	enum ai_state_transition_t : unsigned __int32
	{
		AIS_TRANSITION_CANONICAL = 0xFFFFFFFF,
		AIS_TRANSITION_NONE = 0x0,
		AIS_TRANSITION_SET = 0x1,
		AIS_TRANSITION_PUSH = 0x2,
		AIS_TRANSITION_POP = 0x3,
	};

	enum ai_stance_e : __int32
	{
		STANCE_BAD = 0x0,
		STANCE_STAND = 0x1,
		STANCE_CROUCH = 0x2,
		STANCE_PRONE = 0x4,
		STANCE_ANY = 0x7,
	};

	enum ai_traverse_mode_t : __int32
	{
		AI_TRAVERSE_INVALID = 0x0,
		AI_TRAVERSE_GRAVITY = 0x1,
		AI_TRAVERSE_NOGRAVITY = 0x2,
		AI_TRAVERSE_NOCLIP = 0x3,
		AI_TRAVERSE_COUNT = 0x4,
	};

	enum aiphys_t : __int32
	{
		AIPHYS_BAD = 0x0,
		AIPHYS_NORMAL_ABSOLUTE = 0x1,
		AIPHYS_NORMAL_RELATIVE = 0x2,
		AIPHYS_NOCLIP = 0x3,
		AIPHYS_NOGRAVITY = 0x4,
		AIPHYS_ZONLY_PHYSICS_RELATIVE = 0x5,
	};

	enum aiGoalSources : __int32
	{
		AI_GOAL_SRC_SCRIPT_GOAL = 0x0,
		AI_GOAL_SRC_SCRIPT_ENTITY_GOAL = 0x1,
		AI_GOAL_SRC_FRIENDLY_CHAIN = 0x2,
		AI_GOAL_SRC_ENEMY = 0x3,
	};

	enum ai_badplace_t : __int32
	{
		AI_BADPLACE_NONE = 0x0,
		AI_BADPLACE_NORMAL = 0x1,
		AI_BADPLACE_REALLYBAD = 0x2,
	};

	enum VehicleMoveState : __int32
	{
		VEH_MOVESTATE_STOP = 0x0,
		VEH_MOVESTATE_MOVE = 0x1,
		VEH_MOVESTATE_HOVER = 0x2,
		VEH_MOVESTATE_PLANE_ONCURVE = 0x3,
		VEH_MOVESTATE_PLANE_FREE = 0x4,
	};

	enum VehicleTurretState : __int32
	{
		VEH_TURRET_STOPPED = 0x0,
		VEH_TURRET_STOPPING = 0x1,
		VEH_TURRET_MOVING = 0x2,
	};

	enum MissileStage : __int32
	{
		MISSILESTAGE_SOFTLAUNCH = 0x0,
		MISSILESTAGE_ASCENT = 0x1,
		MISSILESTAGE_DESCENT = 0x2,
	};

	enum MissileFlightMode : __int32
	{
		MISSILEFLIGHTMODE_TOP = 0x0,
		MISSILEFLIGHTMODE_DIRECT = 0x1,
	};

	enum weapClipType_t : __int32
	{
		WEAPON_CLIPTYPE_BOTTOM = 0x0,
		WEAPON_CLIPTYPE_TOP = 0x1,
		WEAPON_CLIPTYPE_LEFT = 0x2,
		WEAPON_CLIPTYPE_DP28 = 0x3,
		WEAPON_CLIPTYPE_PTRS = 0x4,
		WEAPON_CLIPTYPE_LMG = 0x5,
		WEAPON_CLIPTYPECOUNT = 0x6,
	};

	enum DemoType : __int32
	{
		DEMO_TYPE_NONE = 0x0,
		DEMO_TYPE_CLIENT = 0x1,
		DEMO_TYPE_SERVER = 0x2,
	};

	enum CubemapShot : __int32
	{
		CUBEMAPSHOT_NONE = 0x0,
		CUBEMAPSHOT_RIGHT = 0x1,
		CUBEMAPSHOT_LEFT = 0x2,
		CUBEMAPSHOT_BACK = 0x3,
		CUBEMAPSHOT_FRONT = 0x4,
		CUBEMAPSHOT_UP = 0x5,
		CUBEMAPSHOT_DOWN = 0x6,
		CUBEMAPSHOT_COUNT = 0x7,
	};

	enum CameraMode : __int32
	{
		CAM_NORMAL = 0x0,
		CAM_LINKED = 0x1,
		CAM_VEHICLE = 0x2,
		CAM_VEHICLE_GUNNER = 0x3,
		CAM_TURRET = 0x4,
	};

	enum InvalidCmdHintType : __int32
	{
		INVALID_CMD_NONE = 0x0,
		INVALID_CMD_NO_AMMO_BULLETS = 0x1,
		INVALID_CMD_NO_AMMO_FRAG_GRENADE = 0x2,
		INVALID_CMD_NO_AMMO_SPECIAL_GRENADE = 0x3,
		INVALID_CMD_NO_AMMO_FLASH_GRENADE = 0x4,
		INVALID_CMD_STAND_BLOCKED = 0x5,
		INVALID_CMD_CROUCH_BLOCKED = 0x6,
		INVALID_CMD_TARGET_TOO_CLOSE = 0x7,
		INVALID_CMD_LOCKON_REQUIRED = 0x8,
		INVALID_CMD_NOT_ENOUGH_CLEARANCE = 0x9,
	};

	enum SuccessfulCmdHintType : __int32
	{
		SUCCESSFUL_CMD_NONE = 0x0,
		SUCCESSFUL_CMD_GOD_MODE_ON = 0x1,
		SUCCESSFUL_CMD_GOD_MODE_OFF = 0x2,
		SUCCESSFUL_CMD_DEMIGOD_MODE_ON = 0x3,
		SUCCESSFUL_CMD_DEMIGOD_MODE_OFF = 0x4,
		SUCCESSFUL_CMD_UFO_ON = 0x5,
		SUCCESSFUL_CMD_UFO_OFF = 0x6,
		SUCCESSFUL_CMD_WEAPNEXT = 0x7,
		SUCCESSFUL_CMD_WEAPPREV = 0x8,
		SUCCESSFUL_CMD_GIVE_ALL = 0x9,
		SUCCESSFUL_CMD_CAMLOCK_ON = 0xA,
		SUCCESSFUL_CMD_CAMLOCK_OFF = 0xB,
		SUCCESSFUL_CMD_LOOKSPRING_ON = 0xC,
		SUCCESSFUL_CMD_LOOKSPRING_OFF = 0xD,
		SUCCESSFUL_CMD_GESTURE_WIIMOTE_SHAKE_HORZ = 0xE,
		SUCCESSFUL_CMD_GESTURE_WIIMOTE_SHAKE_RIGHT = 0xF,
		SUCCESSFUL_CMD_GESTURE_WIIMOTE_SHAKE_LEFT = 0x10,
		SUCCESSFUL_CMD_GESTURE_WIIMOTE_SHAKE_VERT = 0x11,
		SUCCESSFUL_CMD_GESTURE_WIIMOTE_SHAKE_UP = 0x12,
		SUCCESSFUL_CMD_GESTURE_WIIMOTE_SHAKE_DOWN = 0x13,
		SUCCESSFUL_CMD_GESTURE_WIIMOTE_PUSH_PULL = 0x14,
		SUCCESSFUL_CMD_GESTURE_WIIMOTE_PUSH = 0x15,
		SUCCESSFUL_CMD_GESTURE_WIIMOTE_PULL = 0x16,
		SUCCESSFUL_CMD_GESTURE_WIIMOTE_TWIST_CW = 0x17,
		SUCCESSFUL_CMD_GESTURE_WIIMOTE_TWIST_CCW = 0x18,
		SUCCESSFUL_CMD_GESTURE_WIIMOTE_SWIPE = 0x19,
		SUCCESSFUL_CMD_GESTURE_WIIMOTE_TOSS = 0x1A,
		SUCCESSFUL_CMD_GESTURE_NUNCHUK_SHAKE_HORZ = 0x1B,
		SUCCESSFUL_CMD_GESTURE_NUNCHUK_SHAKE_RIGHT = 0x1C,
		SUCCESSFUL_CMD_GESTURE_NUNCHUK_SHAKE_LEFT = 0x1D,
		SUCCESSFUL_CMD_GESTURE_NUNCHUK_SHAKE_VERT = 0x1E,
		SUCCESSFUL_CMD_GESTURE_NUNCHUK_SHAKE_UP = 0x1F,
		SUCCESSFUL_CMD_GESTURE_NUNCHUK_SHAKE_DOWN = 0x20,
		SUCCESSFUL_CMD_GESTURE_NUNCHUK_PUSH_PULL = 0x21,
		SUCCESSFUL_CMD_GESTURE_NUNCHUK_PUSH = 0x22,
		SUCCESSFUL_CMD_GESTURE_NUNCHUK_PULL = 0x23,
		SUCCESSFUL_CMD_GESTURE_NUNCHUK_TWIST_CW = 0x24,
		SUCCESSFUL_CMD_GESTURE_NUNCHUK_TWIST_CCW = 0x25,
		SUCCESSFUL_CMD_GESTURE_NUNCHUK_SWIPE = 0x26,
		SUCCESSFUL_CMD_GESTURE_NUNCHUK_TOSS = 0x27,
	};

	enum ShockViewTypes : __int32
	{
		SHELLSHOCK_VIEWTYPE_BLURRED = 0x0,
		SHELLSHOCK_VIEWTYPE_FLASHED = 0x1,
		SHELLSHOCK_VIEWTYPE_NONE = 0x2,
	};

	enum visionSetLerpStyle_t : __int32
	{
		VISIONSETLERP_UNDEFINED = 0x0,
		VISIONSETLERP_NONE = 0x1,
		VISIONSETLERP_TO_LINEAR = 0x2,
		VISIONSETLERP_TO_SMOOTH = 0x3,
		VISIONSETLERP_BACKFORTH_LINEAR = 0x4,
		VISIONSETLERP_BACKFORTH_SMOOTH = 0x5,
	};

	enum markerState_t : __int32
	{
		MRKST_EMPTY = 0x0,
		MRKST_ACTIVE_ENTITY = 0x1,
		MRKST_ACTIVE_VECTOR = 0x2,
	};

	enum StanceState : __int32
	{
		CL_STANCE_STAND = 0x0,
		CL_STANCE_CROUCH = 0x1,
		CL_STANCE_PRONE = 0x2,
	};

	enum TraceHitType : __int32
	{
		TRACE_HITTYPE_NONE = 0x0,
		TRACE_HITTYPE_ENTITY = 0x1,
		TRACE_HITTYPE_DYNENT_MODEL = 0x2,
		TRACE_HITTYPE_DYNENT_BRUSH = 0x3,
	};

	enum hitLocation_t : __int32
	{
		HITLOC_NONE = 0x0,
		HITLOC_HELMET = 0x1,
		HITLOC_HEAD = 0x2,
		HITLOC_NECK = 0x3,
		HITLOC_TORSO_UPR = 0x4,
		HITLOC_TORSO_LWR = 0x5,
		HITLOC_R_ARM_UPR = 0x6,
		HITLOC_L_ARM_UPR = 0x7,
		HITLOC_R_ARM_LWR = 0x8,
		HITLOC_L_ARM_LWR = 0x9,
		HITLOC_R_HAND = 0xA,
		HITLOC_L_HAND = 0xB,
		HITLOC_R_LEG_UPR = 0xC,
		HITLOC_L_LEG_UPR = 0xD,
		HITLOC_R_LEG_LWR = 0xE,
		HITLOC_L_LEG_LWR = 0xF,
		HITLOC_R_FOOT = 0x10,
		HITLOC_L_FOOT = 0x11,
		HITLOC_GUN = 0x12,
		HITLOC_NUM = 0x13,
	};

	enum scriptAnimMoveTypes_t : __int32
	{
		ANIM_MT_UNUSED = 0x0,
		ANIM_MT_IDLE = 0x1,
		ANIM_MT_IDLECR = 0x2,
		ANIM_MT_IDLEPRONE = 0x3,
		ANIM_MT_WALK = 0x4,
		ANIM_MT_WALKBK = 0x5,
		ANIM_MT_WALKCR = 0x6,
		ANIM_MT_WALKCRBK = 0x7,
		ANIM_MT_WALKPRONE = 0x8,
		ANIM_MT_WALKPRONEBK = 0x9,
		ANIM_MT_RUN = 0xA,
		ANIM_MT_RUNBK = 0xB,
		ANIM_MT_RUNCR = 0xC,
		ANIM_MT_RUNCRBK = 0xD,
		ANIM_MT_TURNRIGHT = 0xE,
		ANIM_MT_TURNLEFT = 0xF,
		ANIM_MT_TURNRIGHTCR = 0x10,
		ANIM_MT_TURNLEFTCR = 0x11,
		ANIM_MT_CLIMBUP = 0x12,
		ANIM_MT_CLIMBDOWN = 0x13,
		ANIM_MT_SPRINT = 0x14,
		ANIM_MT_MANTLE_ROOT = 0x15,
		ANIM_MT_MANTLE_UP_57 = 0x16,
		ANIM_MT_MANTLE_UP_51 = 0x17,
		ANIM_MT_MANTLE_UP_45 = 0x18,
		ANIM_MT_MANTLE_UP_39 = 0x19,
		ANIM_MT_MANTLE_UP_33 = 0x1A,
		ANIM_MT_MANTLE_UP_27 = 0x1B,
		ANIM_MT_MANTLE_UP_21 = 0x1C,
		ANIM_MT_MANTLE_OVER_HIGH = 0x1D,
		ANIM_MT_MANTLE_OVER_MID = 0x1E,
		ANIM_MT_MANTLE_OVER_LOW = 0x1F,
		ANIM_MT_FLINCH_FORWARD = 0x20,
		ANIM_MT_FLINCH_BACKWARD = 0x21,
		ANIM_MT_FLINCH_LEFT = 0x22,
		ANIM_MT_FLINCH_RIGHT = 0x23,
		ANIM_MT_STUMBLE_FORWARD = 0x24,
		ANIM_MT_STUMBLE_BACKWARD = 0x25,
		ANIM_MT_STUMBLE_WALK_FORWARD = 0x26,
		ANIM_MT_STUMBLE_WALK_BACKWARD = 0x27,
		ANIM_MT_STUMBLE_CROUCH_FORWARD = 0x28,
		ANIM_MT_STUMBLE_CROUCH_BACKWARD = 0x29,
		ANIM_MT_STUMBLE_SPRINT_FORWARD = 0x2A,
		ANIM_MT_SWIM = 0x2B,
		ANIM_MT_SWIMBK = 0x2C,
		NUM_ANIM_MOVETYPES = 0x2D,
	};

	enum animScriptConditionTypes_t : __int32
	{
		ANIM_CONDTYPE_BITFLAGS = 0x0,
		ANIM_CONDTYPE_VALUE = 0x1,
		ANIM_CONDTYPE_ENABLED = 0x2,
		ANIM_CONDTYPE_STRINGHASH = 0x3,
		NUM_ANIM_CONDTYPES = 0x4,
	};

	enum animScriptParseMode_t : __int32
	{
		PARSEMODE_DEFINES = 0x0,
		PARSEMODE_ANIMATION = 0x1,
		PARSEMODE_CANNED_ANIMATIONS = 0x2,
		PARSEMODE_STATECHANGES = 0x3,
		PARSEMODE_EVENTS = 0x4,
		NUM_PARSEMODES = 0x5,
	};

	enum aistateEnum_t : __int32
	{
		AISTATE_COMBAT = 0x0,
		MAX_AISTATES = 0x1,
	};

	enum pmoveVehAnimState_t : __int32
	{
		PMOVE_VEH_ANIM_STATE_PLAYING = 0x0,
		PMOVE_VEH_ANIM_STATE_END_STAGE = 0x1,
		PMOVE_VEH_ANIM_STATE_COMPLETE = 0x2,
	};

	enum itemType_t : __int32
	{
		IT_BAD = 0x0,
		IT_WEAPON = 0x1,
	};

	enum proneCheckType_t : __int32
	{
		PCT_CLIENT = 0x0,
		PCT_ACTOR = 0x1,
	};

	enum PmStanceFrontBack : __int32
	{
		PM_STANCE_STAND = 0x0,
		PM_STANCE_PRONE = 0x1,
		PM_STANCE_CROUCH = 0x2,
		PM_STANCE_BACKWARD_FIRST = 0x3,
		PM_STANCE_BACKWARD_RUN = 0x3,
		PM_STANCE_BACKWARD_PRONE = 0x4,
		PM_STANCE_BACKWARD_CROUCH = 0x5,
		NUM_PM_STANCE_FRONTBACK = 0x6,
	};

	enum scriptAnimStrafeStates_t : __int32
	{
		ANIM_STRAFE_NOT = 0x0,
		ANIM_STRAFE_LEFT = 0x1,
		ANIM_STRAFE_RIGHT = 0x2,
		NUM_ANIM_STRAFESTATES = 0x3,
	};

	enum VehicleSeatPositions : unsigned __int32
	{
		VEH_POS_NONE = 0xFFFFFFFF,
		VEH_POS_DRIVER = 0x0,
		VEH_POS_MIN_GUNNER = 0x1,
		VEH_POS_GUNNER_1 = 0x1,
		VEH_POS_GUNNER_2 = 0x2,
		VEH_POS_GUNNER_3 = 0x3,
		VEH_POS_GUNNER_4 = 0x4,
		VEH_POS_MAX_GUNNER = 0x4,
		VEH_POS_MIN_PASSENGER = 0x5,
		VEH_POS_PASSENGER_1 = 0x5,
		VEH_POS_PASSENGER_2 = 0x6,
		VEH_POS_PASSENGER_3 = 0x7,
		VEH_POS_PASSENGER_4 = 0x8,
		VEH_POS_MAX_PASSENGER = 0x8,
		VEH_POS_MANTLE = 0x9,
		NUM_VEHICLE_POSITIONS = 0xA,
	};

	enum CompassType : __int32
	{
		COMPASS_TYPE_PARTIAL = 0x0,
		COMPASS_TYPE_FULL = 0x1,
	};

	enum BlurPriority : __int32
	{
		BLUR_PRIORITY_NONE = 0x0,
		BLUR_PRIORITY_SCRIPT = 0x1,
		BLUR_PRIORITY_CODE = 0x2,
	};

	enum BlurTime : __int32
	{
		BLUR_TIME_RELATIVE = 0x0,
		BLUR_TIME_ABSOLUTE = 0x1,
	};

	enum operationEnum : __int32
	{
		OP_NOOP = 0x0,
		OP_RIGHTPAREN = 0x1,
		OP_MULTIPLY = 0x2,
		OP_DIVIDE = 0x3,
		OP_MODULUS = 0x4,
		OP_ADD = 0x5,
		OP_SUBTRACT = 0x6,
		OP_NOT = 0x7,
		OP_LESSTHAN = 0x8,
		OP_LESSTHANEQUALTO = 0x9,
		OP_GREATERTHAN = 0xA,
		OP_GREATERTHANEQUALTO = 0xB,
		OP_EQUALS = 0xC,
		OP_NOTEQUAL = 0xD,
		OP_AND = 0xE,
		OP_OR = 0xF,
		OP_LEFTPAREN = 0x10,
		OP_COMMA = 0x11,
		OP_BITWISEAND = 0x12,
		OP_BITWISEOR = 0x13,
		OP_BITWISENOT = 0x14,
		OP_BITSHIFTLEFT = 0x15,
		OP_BITSHIFTRIGHT = 0x16,
		OP_SIN = 0x17,
		OP_FIRSTFUNCTIONCALL = 0x17,
		OP_COS = 0x18,
		OP_MIN = 0x19,
		OP_MAX = 0x1A,
		OP_MILLISECONDS = 0x1B,
		OP_DVARINT = 0x1C,
		OP_DVARBOOL = 0x1D,
		OP_DVARFLOAT = 0x1E,
		OP_DVARSTRING = 0x1F,
		OP_STAT = 0x20,
		OP_UIACTIVE = 0x21,
		OP_FLASHBANGED = 0x22,
		OP_SCOPED = 0x23,
		OP_SCOREBOARDVISIBLE = 0x24,
		OP_INKILLCAM = 0x25,
		OP_PLAYERFIELD = 0x26,
		OP_SELECTINGLOCATION = 0x27,
		OP_TEAMFIELD = 0x28,
		OP_OTHERTEAMFIELD = 0x29,
		OP_MARINESFIELD = 0x2A,
		OP_OPFORFIELD = 0x2B,
		OP_MENUISOPEN = 0x2C,
		OP_WRITINGDATA = 0x2D,
		OP_INLOBBY = 0x2E,
		OP_INPRIVATEPARTY = 0x2F,
		OP_PRIVATEPARTYHOST = 0x30,
		OP_PRIVATEPARTYHOSTINLOBBY = 0x31,
		OP_ALONEINPARTY = 0x32,
		OP_ADSJAVELIN = 0x33,
		OP_WEAPLOCKBLINK = 0x34,
		OP_WEAPATTACKTOP = 0x35,
		OP_WEAPATTACKDIRECT = 0x36,
		OP_SECONDSASTIME = 0x37,
		OP_TABLELOOKUP = 0x38,
		OP_LOCALIZESTRING = 0x39,
		OP_LOCALVARINT = 0x3A,
		OP_LOCALVARBOOL = 0x3B,
		OP_LOCALVARFLOAT = 0x3C,
		OP_LOCALVARSTRING = 0x3D,
		OP_TIMELEFT = 0x3E,
		OP_SECONDSASCOUNTDOWN = 0x3F,
		OP_GAMEMSGWNDACTIVE = 0x40,
		OP_TOINT = 0x41,
		OP_TOSTRING = 0x42,
		OP_TOFLOAT = 0x43,
		OP_GAMETYPENAME = 0x44,
		OP_GAMETYPE = 0x45,
		OP_GAMETYPEDESCRIPTION = 0x46,
		OP_SCORE = 0x47,
		OP_FRIENDSONLINE = 0x48,
		OP_FOLLOWING = 0x49,
		OP_STATRANGEBITSSET = 0x4A,
		OP_KEYBINDING = 0x4B,
		OP_ACTIONSLOTUSABLE = 0x4C,
		OP_HUDFADE = 0x4D,
		OP_MAXPLAYERS = 0x4E,
		OP_ACCEPTINGINVITE = 0x4F,
		OP_GAMEHOST = 0x50,
		OP_ISSPLITSCREEN = 0x51,
		OP_ISSPLITSCREENHOST = 0x52,
		OP_SPLITSCREENNUM = 0x53,
		OP_ISCINEMATICFINISHED = 0x54,
		OP_ISSQUADLEADER = 0x55,
		OP_GETSQUADID = 0x56,
		OP_ISARTILLERY = 0x57,
		OP_GETPLAYERSQUADID = 0x58,
		OP_HASFRIENDS = 0x59,
		OP_HASPENDINGFRIENDS = 0x5A,
		OP_HASINVITES = 0x5B,
		OP_SQUADINVITESENT = 0x5C,
		OP_IFTHENELSE = 0x5D,
		OP_PLAYERPROFILENAME = 0x5E,
		OP_PLAYERPROFILEDEFINED = 0x5F,
		NUM_OPERATORS = 0x60,
	};

	enum snd_overlay_type_t : __int32
	{
		SND_OVERLAY_NONE = 0x0,
		SND_OVERLAY_3D = 0x1,
		SND_OVERLAY_STREAM = 0x2,
		SND_OVERLAY_2D = 0x3,
	};

	enum uiMenuCommand_t : __int32
	{
		UIMENU_NONE = 0x0,
		UIMENU_MAIN = 0x1,
		UIMENU_INGAME = 0x2,
		UIMENU_PREGAME = 0x3,
		UIMENU_POSTGAME = 0x4,
		UIMENU_WM_QUICKMESSAGE = 0x5,
		UIMENU_CLIPBOARD = 0x6,
		UIMENU_BRIEFING = 0x7,
		UIMENU_VICTORYSCREEN = 0x8,
		UIMENU_SAVEERROR = 0x9,
		UIMENU_SAVE_LOADING = 0xA,
		UIMENU_SAVE_SAVING = 0xB,
		UIMENU_SCRIPT_POPUP = 0xC,
		UIMENU_SPLITSCREENGAMESETUP = 0xD,
		UIMENU_SYSTEMLINKJOINGAME = 0xE,
		UIMENU_PARTY = 0xF,
		UIMENU_GAMELOBBY = 0x10,
		UIMENU_PRIVATELOBBY = 0x11,
		UIMENU_CONTROLLERREMOVED = 0x12,
		UIMENU_NUNCHUKREMOVED = 0x13,
		UIMENU_UNKNOWNCONTROLLER = 0x14,
	};

	enum SaveBufferState : __int32
	{
		MEMCLEAR = 0x0,
		MEMALLOCATING = 0x1,
		MEMALLOCATED = 0x2,
		SAVING = 0x3,
		AWAITING_COMMIT = 0x4,
		COMMITTED = 0x5,
		LOADING = 0x6,
	};

	enum LaserOwnerEnum : __int32
	{
		LASER_OWNER_NON_PLAYER = 0x0,
		LASER_OWNER_PLAYER = 0x1,
	};

	enum leType_t : __int32
	{
		LE_MOVING_TRACER = 0x0,
	};

	enum ZapperMenuSelectionMethod : __int32
	{
		ZAPPER_MENU_SELECT_NONE = 0x0,
		ZAPPER_MENU_SELECT_POINT = 0x1,
		ZAPPER_MENU_SELECT_POINT_AND_HOLD = 0x2,
		ZAPPER_MENU_SELECT_POINT_AND_SHOOT = 0x3,
		ZAPPER_MENU_SELECT_POINT_AND_SHAKE = 0x4,
		ZAPPER_MENU_SELECT_POINT_OR_TILT = 0x5,
		ZAPPER_MENU_SELECT_POINT_OR_TAP = 0x6,
		ZAPPER_MENU_SELECT_EXCLUSIVE_TAP = 0x7,
		ZAPPER_MENU_SELECT_TWIST_OR_TAP = 0x8,
		ZAPPER_MENU_SELECT_NUM = 0x9,
	};

	enum RumbleSourceType : __int32
	{
		RUMBLESOURCE_INVALID = 0x0,
		RUMBLESOURCE_ENTITY = 0x1,
		RUMBLESOURCE_POS = 0x2,
	};

	enum Clip_t : __int32
	{
		CLIP_NONE = 0x0,
		CLIP_TOP = 0x1,
		CLIP_BOTTOM = 0x2,
		CLIP_RIGHT = 0x3,
		CLIP_LEFT = 0x4,
	};

	enum print_msg_dest_t : __int32
	{
		CON_DEST_CONSOLE = 0x0,
		CON_DEST_MINICON = 0x1,
		CON_DEST_ERROR = 0x2,
		CON_DEST_GAME_FIRST = 0x3,
		CON_DEST_GAME1 = 0x3,
		CON_DEST_GAME2 = 0x4,
		CON_DEST_GAME3 = 0x5,
		CON_DEST_GAME4 = 0x6,
		CON_DEST_GAME_LAST = 0x6,
		CON_DEST_COUNT = 0x7,
	};

	enum msgwnd_mode_t : __int32
	{
		MWM_BOTTOMUP_ALIGN_TOP = 0x0,
		MWM_BOTTOMUP_ALIGN_BOTTOM = 0x1,
		MWM_TOPDOWN_ALIGN_TOP = 0x2,
		MWM_TOPDOWN_ALIGN_BOTTOM = 0x3,
	};

	enum LocSelInputState : __int32
	{
		LOC_SEL_INPUT_NONE = 0x0,
		LOC_SEL_INPUT_CONFIRM = 0x1,
		LOC_SEL_INPUT_REGROUP = 0x2,
		LOC_SEL_INPUT_DEFEND = 0x3,
		LOC_SEL_INPUT_SQUAD_CANCEL = 0x4,
		LOC_SEL_INPUT_CANCEL = 0x5,
	};

	enum GamepadPhysicalAxis
	{
		GPAD_PHYSAXIS_RSTICK_X = 0x0,
		GPAD_PHYSAXIS_RSTICK_Y = 0x1,
		GPAD_PHYSAXIS_LSTICK_X = 0x2,
		GPAD_PHYSAXIS_LSTICK_Y = 0x3,
		GPAD_PHYSAXIS_RTRIGGER = 0x4,
		GPAD_PHYSAXIS_LTRIGGER = 0x5,
		GPAD_PHYSAXIS_COUNT = 0x6,
		GPAD_PHYSAXIS_NONE = 0xFFFFFFFF,
	};

	enum GamepadMapping
	{
		GPAD_MAP_LINEAR = 0x0,
		GPAD_MAP_SQUARED = 0x1,
		GPAD_MAP_COUNT = 0x2,
		GPAD_MAP_NONE = 0xFFFFFFFF,
	};

	enum keyNum_t : __int32
	{
		K_NONE = 0x0,
		K_FIRSTGAMEPADBUTTON_RANGE_1 = 0x1,
		K_BUTTON_A = 0x1,
		K_BUTTON_B = 0x2,
		K_BUTTON_X = 0x3,
		K_BUTTON_Y = 0x4,
		K_BUTTON_LSHLDR = 0x5,
		K_BUTTON_RSHLDR = 0x6,
		K_LASTGAMEPADBUTTON_RANGE_1 = 0x6,
		K_TAB = 0x9,
		K_ENTER = 0xD,
		K_FIRSTGAMEPADBUTTON_RANGE_2 = 0xE,
		K_BUTTON_START = 0xE,
		K_BUTTON_BACK = 0xF,
		K_BUTTON_LSTICK = 0x10,
		K_BUTTON_RSTICK = 0x11,
		K_BUTTON_LTRIG = 0x12,
		K_BUTTON_RTRIG = 0x13,
		K_DPAD_UP = 0x14,
		K_FIRSTDPAD = 0x14,
		K_DPAD_DOWN = 0x15,
		K_DPAD_LEFT = 0x16,
		K_DPAD_RIGHT = 0x17,
		K_BUTTON_LSTICK_ALTIMAGE = 0xBC,
		K_BUTTON_RSTICK_ALTIMAGE = 0xBD,
		K_LASTDPAD = 0x17,
		K_LASTGAMEPADBUTTON_RANGE_2 = 0x17,
		K_ESCAPE = 0x1B,
		K_FIRSTGAMEPADBUTTON_RANGE_3 = 0x1C,
		K_APAD_UP = 0x1C,
		K_FIRSTAPAD = 0x1C,
		K_APAD_DOWN = 0x1D,
		K_APAD_LEFT = 0x1E,
		K_APAD_RIGHT = 0x1F,
		K_LASTAPAD = 0x1F,
		K_LASTGAMEPADBUTTON_RANGE_3 = 0x1F,
		K_SPACE = 0x20,
		K_FIRSTBUDDYBUTTON_RANGE = 0x21,
		K_BUTTON_A_ALT = 0x21,
		K_BUTTON_B_ALT = 0x22,
		K_BUTTON_C_ALT = 0x23,
		K_BUTTON_Z_ALT = 0x24,
		K_BUTTON_X_ALT = 0x25,
		K_BUTTON_Y_ALT = 0x26,
		K_BUTTON_PLUS_ALT = 0x27,
		K_BUTTON_MINUS_ALT = 0x28,
		K_DPAD_LEFT_ALT = 0x29,
		K_DPAD_RIGHT_ALT = 0x2A,
		K_LASTBUDDYBUTTON_RANGE = 0x2A,
		K_BACKSPACE = 0x7F,
		K_ASCII_FIRST = 0x80,
		K_ASCII_181 = 0x80,
		K_ASCII_191 = 0x81,
		K_ASCII_223 = 0x82,
		K_ASCII_224 = 0x83,
		K_ASCII_225 = 0x84,
		K_ASCII_228 = 0x85,
		K_ASCII_229 = 0x86,
		K_ASCII_230 = 0x87,
		K_ASCII_231 = 0x88,
		K_ASCII_232 = 0x89,
		K_ASCII_233 = 0x8A,
		K_ASCII_236 = 0x8B,
		K_ASCII_241 = 0x8C,
		K_ASCII_242 = 0x8D,
		K_ASCII_243 = 0x8E,
		K_ASCII_246 = 0x8F,
		K_ASCII_248 = 0x90,
		K_ASCII_249 = 0x91,
		K_ASCII_250 = 0x92,
		K_ASCII_252 = 0x93,
		K_END_ASCII_CHARS = 0x94,
		K_COMMAND = 0x96,
		K_CAPSLOCK = 0x97,
		K_POWER = 0x98,
		K_PAUSE = 0x99,
		K_UPARROW = 0x9A,
		K_DOWNARROW = 0x9B,
		K_LEFTARROW = 0x9C,
		K_RIGHTARROW = 0x9D,
		K_ALT = 0x9E,
		K_CTRL = 0x9F,
		K_SHIFT = 0xA0,
		K_INS = 0xA1,
		K_DEL = 0xA2,
		K_PGDN = 0xA3,
		K_PGUP = 0xA4,
		K_HOME = 0xA5,
		K_END = 0xA6,
		K_F1 = 0xA7,
		K_F2 = 0xA8,
		K_F3 = 0xA9,
		K_F4 = 0xAA,
		K_F5 = 0xAB,
		K_F6 = 0xAC,
		K_F7 = 0xAD,
		K_F8 = 0xAE,
		K_F9 = 0xAF,
		K_F10 = 0xB0,
		K_F11 = 0xB1,
		K_F12 = 0xB2,
		K_F13 = 0xB3,
		K_F14 = 0xB4,
		K_F15 = 0xB5,
		K_KP_HOME = 0xB6,
		K_KP_UPARROW = 0xB7,
		K_KP_PGUP = 0xB8,
		K_KP_LEFTARROW = 0xB9,
		K_KP_5 = 0xBA,
		K_KP_RIGHTARROW = 0xBB,
		K_KP_END = 0xBC,
		K_KP_DOWNARROW = 0xBD,
		K_KP_PGDN = 0xBE,
		K_KP_ENTER = 0xBF,
		K_KP_INS = 0xC0,
		K_KP_DEL = 0xC1,
		K_KP_SLASH = 0xC2,
		K_KP_MINUS = 0xC3,
		K_KP_PLUS = 0xC4,
		K_KP_NUMLOCK = 0xC5,
		K_KP_STAR = 0xC6,
		K_KP_EQUALS = 0xC7,
		K_MOUSE1 = 0xC8,
		K_MOUSE2 = 0xC9,
		K_MOUSE3 = 0xCA,
		K_MOUSE4 = 0xCB,
		K_MOUSE5 = 0xCC,
		K_MWHEELDOWN = 0xCD,
		K_MWHEELUP = 0xCE,
		K_AUX1 = 0xCF,
		K_AUX2 = 0xD0,
		K_AUX3 = 0xD1,
		K_AUX4 = 0xD2,
		K_AUX5 = 0xD3,
		K_AUX6 = 0xD4,
		K_AUX7 = 0xD5,
		K_AUX8 = 0xD6,
		K_AUX9 = 0xD7,
		K_AUX10 = 0xD8,
		K_AUX11 = 0xD9,
		K_AUX12 = 0xDA,
		K_AUX13 = 0xDB,
		K_AUX14 = 0xDC,
		K_AUX15 = 0xDD,
		K_AUX16 = 0xDE,
		K_LAST_KEY = 0xDF,
	};

	enum GamepadVirtualAxis : unsigned __int32
	{
		GPAD_VIRTAXIS_SIDE = 0x0,
		GPAD_VIRTAXIS_FORWARD = 0x1,
		GPAD_VIRTAXIS_UP = 0x2,
		GPAD_VIRTAXIS_YAW = 0x3,
		GPAD_VIRTAXIS_PITCH = 0x4,
		GPAD_VIRTAXIS_ATTACK = 0x5,
		GPAD_VIRTAXIS_ROLL = 0x6,
		GPAD_VIRTAXIS_PITCH_BUDDY = 0x7,
		GPAD_VIRTAXIS_YAW_BUDDY = 0x8,
		GPAD_VIRTAXIS_COUNT = 0x9,
		GPAD_VIRTAXIS_NONE = 0xFFFFFFFF,
	};

	enum GamePadStick : __int32
	{
		GPAD_INVALID = 0x0,
		GPAD_LX = 0x40000000,
		GPAD_LY = 0x40000001,
		GPAD_RX = 0x40000002,
		GPAD_RY = 0x40000003,
		GPAD_HORIZON = 0x40000004,
	};

	enum INITIAL_SAVE_STATE : __int32
	{
		INITIAL_SAVE_STATE_START = 0x0,
		INITIAL_SAVE_STATE_WAITINGONUI1 = 0x1,
		INITIAL_SAVE_STATE_WAITINGONUI2 = 0x2,
		INITIAL_SAVE_STATE_SAVE = 0x3,
		INITIAL_SAVE_STATE_DONE = 0x4,
	};

	enum snd_alias_type_t : __int32
	{
		SAT_UNKNOWN = 0x0,
		SAT_LOADED = 0x1,
		SAT_STREAMED = 0x2,
		SAT_PRIMED = 0x3,
		SAT_COUNT = 0x4,
	};

	enum gpuTextureFormat : __int32
	{
		GPU_TEXTURE_DXT1 = 0xE,
		GPU_TEXTURE_L8 = 0x1,
		GPU_TEXTURE_U8 = 0x1,
		GPU_TEXTURE_V8 = 0x1,
		GPU_TEXTURE_Y8 = 0x1,
		GPU_TEXTURE_R5G6B5 = 0x4,
		GPU_TEXTURE_R5G5B5A3 = 0x5,
		GPU_TEXTURE_A8R8G8B8 = 0x6,
		GPU_TEXTURE_A8L8 = 0x3,
		GPU_TEXTURE_L4 = 0x0,
		GPU_TEXTURE_A4L4 = 0x2,
		GPU_TEXTURE_C4 = 0x8,
		GPU_TEXTURE_C8 = 0x9,
		GPU_TEXTURE_R8G8B8_EFB = 0xA,
		GPU_TEXTURE_R5G6B5_EFB = 0xB,
		GPU_TEXTURE_Z8 = 0xC,
		GPU_TEXTURE_Z16 = 0xD,
		GPU_TEXTURE_Z24 = 0xE,
		GPU_TEXTURE_A6R6G6B6_EFB = 0xF,
	};

	enum MaterialWorldVertexFormat : __int32
	{
		MTL_WORLDVERT_TEX_1_NRM_1 = 0x0,
		MTL_WORLDVERT_TEX_2_NRM_1 = 0x1,
		MTL_WORLDVERT_TEX_2_NRM_2 = 0x2,
		MTL_WORLDVERT_TEX_3_NRM_1 = 0x3,
		MTL_WORLDVERT_TEX_3_NRM_2 = 0x4,
		MTL_WORLDVERT_TEX_3_NRM_3 = 0x5,
		MTL_WORLDVERT_TEX_4_NRM_1 = 0x6,
		MTL_WORLDVERT_TEX_4_NRM_2 = 0x7,
		MTL_WORLDVERT_TEX_4_NRM_3 = 0x8,
		MTL_WORLDVERT_TEX_5_NRM_1 = 0x9,
		MTL_WORLDVERT_TEX_5_NRM_2 = 0xA,
		MTL_WORLDVERT_TEX_5_NRM_3 = 0xB,
	};

	enum GfxLightType : __int32
	{
		GFX_LIGHT_TYPE_NONE = 0x0,
		GFX_LIGHT_TYPE_DIR = 0x1,
		GFX_LIGHT_TYPE_SPOT = 0x2,
		GFX_LIGHT_TYPE_OMNI = 0x3,
		GFX_LIGHT_TYPE_COUNT = 0x4,
		GFX_LIGHT_TYPE_DIR_SHADOWMAP = 0x4,
		GFX_LIGHT_TYPE_SPOT_SHADOWMAP = 0x5,
		GFX_LIGHT_TYPE_OMNI_SHADOWMAP = 0x6,
		GFX_LIGHT_TYPE_COUNT_WITH_SHADOWMAP_VERSIONS = 0x7,
	};

	enum weapAnimFiles_t : __int32
	{
		WEAP_ANIM_ROOT = 0x0,
		WEAP_ANIM_IDLE = 0x1,
		WEAP_ANIM_EMPTY_IDLE = 0x2,
		WEAP_ANIM_FIRE = 0x3,
		WEAP_ANIM_HOLD_FIRE = 0x4,
		WEAP_ANIM_LASTSHOT = 0x5,
		WEAP_ANIM_RECHAMBER = 0x6,
		WEAP_ANIM_MELEE = 0x7,
		WEAP_ANIM_MELEE_CHARGE = 0x8,
		WEAP_ANIM_RELOAD = 0x9,
		WEAP_ANIM_RELOAD_EMPTY = 0xA,
		WEAP_ANIM_RELOAD_START = 0xB,
		WEAP_ANIM_RELOAD_END = 0xC,
		WEAP_ANIM_RAISE = 0xD,
		WEAP_ANIM_FIRST_RAISE = 0xE,
		WEAP_ANIM_DROP = 0xF,
		WEAP_ANIM_ALT_RAISE = 0x10,
		WEAP_ANIM_ALT_DROP = 0x11,
		WEAP_ANIM_QUICK_RAISE = 0x12,
		WEAP_ANIM_QUICK_DROP = 0x13,
		WEAP_ANIM_EMPTY_RAISE = 0x14,
		WEAP_ANIM_EMPTY_DROP = 0x15,
		WEAP_ANIM_SPRINT_IN = 0x16,
		WEAP_ANIM_SPRINT_LOOP = 0x17,
		WEAP_ANIM_SPRINT_OUT = 0x18,
		WEAP_ANIM_DEPLOY = 0x19,
		WEAP_ANIM_BREAKDOWN = 0x1A,
		WEAP_ANIM_DETONATE = 0x1B,
		WEAP_ANIM_NIGHTVISION_WEAR = 0x1C,
		WEAP_ANIM_NIGHTVISION_REMOVE = 0x1D,
		WEAP_ANIM_ADS_FIRE = 0x1E,
		WEAP_ANIM_ADS_LASTSHOT = 0x1F,
		WEAP_ANIM_ADS_RECHAMBER = 0x20,
		WEAP_ANIM_ADS_UP = 0x21,
		WEAP_ANIM_ADS_DOWN = 0x22,
		NUM_WEAP_ANIMS = 0x23,
	};

	enum weapPositionAnimNum_t : __int32
	{
		WEAPPOS_HIP_TO_ADS = 0x0,
		WEAPPOS_ADS_TO_HIP = 0x1,
		NUM_WEAPPOS_ANIMS = 0x2,
	};

	enum WeapAccuracyType : __int32
	{
		WEAP_ACCURACY_AI_VS_AI = 0x0,
		WEAP_ACCURACY_AI_VS_PLAYER = 0x1,
		WEAP_ACCURACY_COUNT = 0x2,
	};

	enum weaponAltModel_t : __int32
	{
		WEAP_ALT_MODEL0 = 0x0,
		WEAP_ALT_MODEL1 = 0x1,
		WEAP_ALT_MODEL2 = 0x2,
		WEAP_ALT_MODEL3 = 0x3,
		WEAP_ALT_MODEL4 = 0x4,
		WEAP_ALT_MODEL5 = 0x5,
		WEAP_ALT_MODEL6 = 0x6,
		WEAP_ALT_MODEL7 = 0x7,
		WEAP_ALT_MODEL8 = 0x8,
		WEAP_ALT_MODEL9 = 0x9,
		WEAP_ALT_MODEL10 = 0xA,
		WEAP_ALT_MODEL11 = 0xB,
		WEAP_ALT_MODEL12 = 0xC,
		WEAP_ALT_MODEL13 = 0xD,
		WEAP_ALT_MODEL14 = 0xE,
		WEAP_ALT_MODEL15 = 0xF,
		NUM_WEAP_ALTMODELS = 0x10,
	};

	enum nglCullType : __int32
	{
		NGL_CULL_NONE = 0x0,
		NGL_CULL_FRONT = 0x1,
		NGL_CULL_BACK = 0x2,
		NGL_CULL_ALL = 0x3,
	};

	enum _GXCompare : __int32
	{
		GX_NEVER = 0x0,
		GX_LESS = 0x1,
		GX_EQUAL = 0x2,
		GX_LEQUAL = 0x3,
		GX_GREATER = 0x4,
		GX_NEQUAL = 0x5,
		GX_GEQUAL = 0x6,
		GX_ALWAYS = 0x7,
	};

	enum nflMediaID : unsigned __int32
	{
		NFL_MEDIA_ID_DISC = 0x1,
		NFL_MEDIA_ID_HOST = 0x2,
		NFL_MEDIA_ID_LINK = 0x4,
		NFL_MEDIA_ID_DEFAULT = 0x3,
		NFL_MEDIA_ID_ALL = 0x7FFFFFFF,
		NFL_MEDIA_ID_INVALID = 0xFFFFFFFF,
	};

	enum DynEntityDrawType : __int32
	{
		DYNENT_DRAW_MODEL = 0x0,
		DYNENT_DRAW_BRUSH = 0x1,
		DYNENT_DRAW_COUNT = 0x2,
	};

	enum DynEntityCollType : __int32
	{
		DYNENT_COLL_CLIENT_FIRST = 0x0,
		DYNENT_COLL_CLIENT_MODEL = 0x0,
		DYNENT_COLL_CLIENT_BRUSH = 0x1,
		DYNENT_COLL_SERVER_FIRST = 0x2,
		DYNENT_COLL_SERVER_MODEL = 0x2,
		DYNENT_COLL_SERVER_BRUSH = 0x3,
		DYNENT_COLL_COUNT = 0x4,
	};

	enum FxUpdateResult : __int32
	{
		FX_UPDATE_REMOVE = 0x0,
		FX_UPDATE_KEEP = 0x1,
	};

	enum enumLastShot : __int32
	{
		LAST_SHOT_IN_CLIP = 0x0,
		NOT_LAST_SHOT_IN_CLIP = 0x1,
	};

	enum PARM_SUPPRESSION : __int32
	{
		DO_SUPPRESSION = 0x0,
		DONT_SUPPRESS = 0x1,
	};

	enum PredictionTraceResult : __int32
	{
		PTR_SUCCESS = 0x0,
		PTR_HIT_WORLD = 0x1,
		PTR_HIT_ENTITY = 0x2,
	};

	enum SlideMoveResult : __int32
	{
		SLIDEMOVE_COMPLETE = 0x0,
		SLIDEMOVE_CLIPPED = 0x1,
		SLIDEMOVE_FAIL = 0x2,
	};

	enum ai_teammove_t : __int32
	{
		AI_TEAMMOVE_TRAVEL = 0x0,
		AI_TEAMMOVE_WAIT = 0x1,
		AI_TEAMMOVE_SLOW_DOWN = 0x2,
	};

	enum weaponstate_t : __int32
	{
		WEAPON_READY = 0x0,
		WEAPON_RAISING = 0x1,
		WEAPON_RAISING_ALTSWITCH = 0x2,
		WEAPON_DROPPING = 0x3,
		WEAPON_DROPPING_QUICK = 0x4,
		WEAPON_FIRING = 0x5,
		WEAPON_RECHAMBERING = 0x6,
		WEAPON_RELOADING = 0x7,
		WEAPON_RELOADING_INTERUPT = 0x8,
		WEAPON_RELOAD_START = 0x9,
		WEAPON_RELOAD_START_INTERUPT = 0xA,
		WEAPON_RELOAD_END = 0xB,
		WEAPON_MELEE_CHARGE = 0xC,
		WEAPON_MELEE_INIT = 0xD,
		WEAPON_MELEE_FIRE = 0xE,
		WEAPON_MELEE_END = 0xF,
		WEAPON_OFFHAND_INIT = 0x10,
		WEAPON_OFFHAND_PREPARE = 0x11,
		WEAPON_OFFHAND_HOLD = 0x12,
		WEAPON_OFFHAND_START = 0x13,
		WEAPON_OFFHAND = 0x14,
		WEAPON_OFFHAND_END = 0x15,
		WEAPON_DETONATING = 0x16,
		WEAPON_SPRINT_RAISE = 0x17,
		WEAPON_SPRINT_LOOP = 0x18,
		WEAPON_SPRINT_DROP = 0x19,
		WEAPON_DEPLOYING = 0x1A,
		WEAPON_DEPLOYED = 0x1B,
		WEAPON_BREAKING_DOWN = 0x1C,
		WEAPON_SWIM_IN = 0x1D,
		WEAPON_SWIM_OUT = 0x1E,
		WEAPONSTATES_NUM = 0x1F,
	};

	enum saveFieldtype_t : __int32
	{
		SF_NONE = 0x0,
		SF_STRING = 0x1,
		SF_ENTITY = 0x2,
		SF_ENTHANDLE = 0x3,
		SF_CLIENT = 0x4,
		SF_ACTOR = 0x5,
		SF_SENTIENT = 0x6,
		SF_SENTIENTHANDLE = 0x7,
		SF_VEHICLE = 0x8,
		SF_TURRETINFO = 0x9,
		SF_DESTRUCTIBLE = 0xA,
		SF_THREAD = 0xB,
		SF_ANIMSCRIPT = 0xC,
		SF_PATHNODE = 0xD,
		SF_ANIMTREE = 0xE,
		SF_TYPE_TAG_INFO = 0xF,
		SF_TYPE_SCRIPTED = 0x10,
		SF_MODELUSHORT = 0x11,
		SF_MODELINT = 0x12,
	};

	enum SaveErrorType : __int32
	{
		SAVE_ERROR_MISSING_DEVICE = 0x0,
		SAVE_ERROR_CORRUPT_SAVE = 0x1,
	};

	enum SaveType : __int32
	{
		SAVE_TYPE_INTERNAL = 0x0,
		SAVE_TYPE_AUTOSAVE = 0x1,
		SAVE_TYPE_CONSOLE = 0x2,
	};

	enum VehicleMantlePoints : __int32
	{
		MANTLE_ANGLE_FRONT = 0x0,
		MANTLE_ANGLE_BACK = 0x1,
		MANTLE_ANGLE_LEFT = 0x2,
		MANTLE_ANGLE_RIGHT = 0x3,
		MANTLE_ANGLE_MAX = 0x4,
	};

	enum nearestNodeHeightCheck : __int32
	{
		NEAREST_NODE_DO_HEIGHT_CHECK = 0x0,
		NEAREST_NODE_DONT_DO_HEIGHT_CHECK = 0x1,
	};

	enum phys_proftimer_e : __int32
	{
		phys_proftimer_buoyancy = 0x0,
		phys_proftimer_terrain_query = 0x1,
		phys_proftimer_dent_query = 0x2,
		phys_proftimer_phys_collision_total = 0x3,
		phys_proftimer_phys_collision_prolog = 0x4,
		phys_proftimer_collision_broad_phase = 0x5,
		phys_proftimer_collision_object_environment = 0x6,
		phys_proftimer_collision_terrain_query = 0x7,
		phys_proftimer_generate_clusters0 = 0x8,
		phys_proftimer_generate_clusters1 = 0x9,
		phys_proftimer_generate_clusters2 = 0xA,
		phys_proftimer_generate_clusters3 = 0xB,
		phys_proftimer_collision_self = 0xC,
		phys_proftimer_collision_object_object = 0xD,
		phys_proftimer_aasap_sort0 = 0xE,
		phys_proftimer_aasap_sort1 = 0xF,
		phys_proftimer_aasap_sort2 = 0x10,
		phys_proftimer_aasap_sort = 0x11,
		phys_proftimer_aasap_process = 0x12,
		phys_proftimer_collision_narrow_phase = 0x13,
		phys_proftimer_collision_narrow_phase_finish = 0x14,
		phys_proftimer_collision_rbc_update = 0x15,
		phys_proftimer_gjk = 0x16,
		phys_proftimer_gjk_query = 0x17,
		phys_proftimer_contact_manifold = 0x18,
		phys_proftimer_gjk_support = 0x19,
		phys_proftimer_phys_misc = 0x1A,
		phys_proftimer_phys_generate_partitions = 0x1B,
		phys_proftimer_phys_priority_sort = 0x1C,
		phys_proftimer_phys_rbc_contact_purge = 0x1D,
		phys_proftimer_phys_solver = 0x1E,
		phys_proftimer_phys_ppu_solver = 0x1F,
		phys_proftimer_phys_solver_setup = 0x20,
		phys_proftimer_phys_solver_iterative = 0x21,
		phys_proftimer_phys_solver_epilog = 0x22,
		num_phys_proftimers = 0x23,
	};

	enum phys_profcounter_e : __int32
	{
		phys_profcounter_angular_ke_dif = 0x0,
		phys_profcounter_total_possible_clusters = 0x1,
		phys_profcounter_total_clusters = 0x2,
		phys_profcounter_cluster_compare = 0x3,
		phys_profcounter_total_rigid_bodies = 0x4,
		phys_profcounter_total_pcps = 0x5,
		phys_profcounter_total_solver_islands = 0x6,
		phys_profcounter_total_ppu_solver_islands = 0x7,
		phys_profcounter_total_contact_cache_hit = 0x8,
		phys_profcounter_total_contact_cache_miss = 0x9,
		num_phys_profcounters = 0xA,
	};

	enum Phys_SurfaceType : __int32
	{
		EFFECT_SURF_TYPE_HARD = 0x0,
		EFFECT_SURF_TYPE_SOFT = 0x1,
		EFFECT_SURF_TYPE_METAL = 0x2,
		EFFECT_SURF_TYPE_GLASS = 0x3,
		EFFECT_SURF_TYPE_WATER = 0x4,
		EFFECT_SURF_TYPE_WOOD = 0x5,
		EFFECT_SURF_TYPE_FOLIAGE = 0x6,
		EFFECT_SURF_TYPE_FLESH = 0x7,
		EFFECT_SURF_TYPE_COUNT = 0x8,
	};

	enum SphereEdgeTraceResult : __int32
	{
		SPHERE_HITS_EDGE = 0x0,
		SPHERE_MISSES_EDGE = 0x1,
		SPHERE_MAY_HIT_V0 = 0x2,
		SPHERE_MAY_HIT_V1 = 0x3,
	};

	enum GamePadButton : __int32
	{
		GPAD_NONE = 0x0,
		GPAD_UP = 0x10000008,
		GPAD_DOWN = 0x10000004,
		GPAD_LEFT = 0x10000001,
		GPAD_RIGHT = 0x10000002,
		GPAD_START = 0x10000010,
		GPAD_BACK = 0x10004800,
		GPAD_L3 = 0x10005000,
		GPAD_R3 = 0x10004000,
		GPAD_A = 0x10000800,
		GPAD_B = 0x10001000,
		GPAD_X = 0x10000100,
		GPAD_Y = 0x10000200,
		GPAD_L_SHLDR = 0x10006000,
		GPAD_R_SHLDR = 0x10004400,
		GPAD_L_TRIG = 0x10002000,
		GPAD_R_TRIG = 0x10000400,
		GPAD_HOME = 0x10008000,
	};

	enum sysEventType_t
	{
		SE_NONE = 0x0,
		SE_KEY = 0x1,
		SE_CHAR = 0x2,
		SE_CONSOLE = 0x3,
	};

	enum ThreadOwner : __int32
	{
		THREAD_OWNER_NONE = 0x0,
		THREAD_OWNER_DATABASE = 0x1,
		THREAD_OWNER_CINEMATICS = 0x2,
	};

	enum PhysicsGeomType : __int32
	{
		PHYS_GEOM_NONE = 0x0,
		PHYS_GEOM_BOX = 0x1,
		PHYS_GEOM_BRUSHMODEL = 0x2,
		PHYS_GEOM_BRUSH = 0x3,
		PHYS_GEOM_CYLINDER = 0x4,
		PHYS_GEOM_CAPSULE = 0x5,
		PHYS_GEOM_COUNT = 0x6,
	};

	enum JointType : __int32
	{
		RAGDOLL_JOINT_NONE = 0x0,
		RAGDOLL_JOINT_HINGE = 0x1,
		RAGDOLL_JOINT_SWIVEL = 0x2,
	};

	enum RagdollBodyState : __int32
	{
		BS_DEAD = 0x0,
		BS_DOBJ_WAIT = 0x1,
		BS_VELOCITY_CAPTURE = 0x2,
		BS_TUNNEL_TEST = 0x3,
		BS_RUNNING = 0x4,
		BS_IDLE = 0x5,
		RAGDOLL_NUM_STATES = 0x6,
	};

	enum nglFrameLockType : __int32
	{
		NGLFL_NONE = 0x0,
		NGLFL_ONE = 0x1,
		NGLFL_TWO = 0x2,
		NGLFL_ONE_OR_IMMEDIATE = 0x3,
		NGLFL_TWO_OR_IMMEDIATE = 0x4,
	};

	enum eCurveType : __int32
	{
		CURVE_RNS = 0x0,
		CURVE_SNS = 0x1,
		CURVE_TNS = 0x2,
		CURVE_BSPLINE = 0x3,
	};

	enum EMemTrack : __int32
	{
		TRACK_DEBUG = 0x0,
		TRACK_DEBUG_MEM = 0x1,
		TRACK_HUNK = 0x2,
		TRACK_BINARIES = 0x3,
		TRACK_MISC_SWAP = 0x4,
		TRACK_DELIMITER1 = 0x5,
		TRACK_AI = 0x6,
		TRACK_AI_NODES = 0x7,
		TRACK_SCRIPT = 0x8,
		TRACK_FX = 0x9,
		TRACK_NETWORK_ENTITY = 0xA,
		TRACK_MISC = 0xB,
		TRACK_FASTFILE = 0xC,
		TRACK_ANIMATION = 0xD,
		TRACK_WORLD_GLOBALS = 0xE,
		TRACK_SOUND_GLOBALS = 0xF,
		TRACK_DB_REGISTRY = 0x10,
		TRACK_WII_SOUND_GLOBALS = 0x11,
		TRACK_SOUND = 0x12,
		TRACK_WII_SOUND = 0x13,
		TRACK_DELIMITER2 = 0x14,
		TRACK_RENDERER_GLOBALS = 0x15,
		TRACK_RENDERER_IMAGES = 0x16,
		TRACK_RENDERER_WORLD = 0x17,
		TRACK_RENDERER_MODELS = 0x18,
		TRACK_RENDERER_MISC = 0x19,
		TRACK_RENDERER_TOTAL = 0x1A,
		TRACK_CINEMATICS = 0x1B,
		TRACK_DELIMITER3 = 0x1C,
		TRACK_COLLISION_MISC = 0x1D,
		TRACK_COLLISION_BRUSH = 0x1E,
		TRACK_COLLISION_MODEL_TRI = 0x1F,
		TRACK_COLLISION_TERRAIN = 0x20,
		TRACK_COLLISION_TOTAL = 0x21,
		TRACK_PHYSICS = 0x22,
		TRACK_MAP_ENTS = 0x23,
		TRACK_TEMP = 0x24,
		TRACK_DELIMITER4 = 0x25,
		TRACK_LOCALIZATION = 0x26,
		TRACK_FLAME = 0x27,
		TRACK_UI = 0x28,
		TRACK_TL = 0x29,
		TRACK_ZMEM = 0x2A,
		TRACK_SCALEFORM = 0x2B,
		TRACK_FIREMANAGER = 0x2C,
		TRACK_PROFILE = 0x2D,
		TRACK_WATERSIM = 0x2E,
		TRACK_CLIENT = 0x2F,
		TRACK_CONSOLE_IMAGES = 0x30,
		TRACK_DELIMITER5 = 0x31,
		TRACK_NONE = 0x32,
		TRACK_COUNT = 0x33,
	};

	enum IKBoneNames : unsigned __int32
	{
		IKBONE_NONE = 0xFFFFFFFF,
		IKBONE_FIRST = 0x0,
		IKBONE_ORIGIN = 0x0,
		IKBONE_TORSO = 0x1,
		IKBONE_LUPPERARM = 0x2,
		IKBONE_LFOREARM = 0x3,
		IKBONE_LHAND = 0x4,
		IKBONE_RUPPERARM = 0x5,
		IKBONE_RFOREARM = 0x6,
		IKBONE_RHAND = 0x7,
		IKBONE_RWEAPON = 0x8,
		IKBONE_COUNT = 0x9,
	};

	enum IKLayerNames : __int32
	{
		IKLAYER_PELVIS_TEST = 0x0,
		IKLAYER_TERRAIN_MAPPING = 0x1,
		IKLAYER_HAND_TEST = 0x2,
		IKLAYER_LEFT_HAND_ON_GUN = 0x3,
		IKLAYER_RIGHT_HAND_ON_GUN = 0x4,
		IKLAYER_PLAYER_PITCH = 0x5,
		IKLAYER_WII_HANDS = 0x6,
		IKLAYER_VEHICLE_GUNNER_OFFSET = 0x7,
		IKLAYER_TURRET_FIRING = 0x8,
		IKLAYER_CROUCH_ACTIVE = 0x9,
		IKLAYER_PLAYER_CONTROLLERS = 0xA,
		IKLAYER_COUNT = 0xB,
	};

	enum XModelLodRampType : __int32
	{
		XMODEL_LOD_RAMP_RIGID = 0x0,
		XMODEL_LOD_RAMP_SKINNED = 0x1,
		XMODEL_LOD_RAMP_COUNT = 0x2,
	};

	enum inflate_block_mode : __int32
	{
		TYPE = 0x0,
		LENS = 0x1,
		STORED = 0x2,
		TABLE = 0x3,
		BTREE = 0x4,
		DTREE = 0x5,
		CODES = 0x6,
		DRY = 0x7,
		DONE = 0x8,
		BAD = 0x9,
	};

	enum nflBufferMode : __int32
	{
		NFL_BUFFER_MODE_DEFAULT = 0x0,
		NFL_BUFFER_MODE_NOBUFFER = 0x1,
		NFL_BUFFER_MODE_UNALIGNED = 0x2,
		NFL_BUFFER_MODE_ALL = 0x3,
		NFL_BUFFER_MODE_VM = 0x4,
	};

	enum nflThreadMode : __int32
	{
		NFL_THREAD_MODE_SINGLE = 0x0,
		NFL_THREAD_MODE_MULTI = 0x1,
	};

	enum nflFileID : unsigned __int32
	{
		NFL_FILE_ID_INVALID = 0xFFFFFFFF,
		NFL_FILE_ID_FORCE32 = 0x7FFFFFFF,
	};

	enum VoiceState : __int32
	{
		VOICE_STATE_STOPPED = 0x0,
		VOICE_STATE_START = 0x1,
		VOICE_STATE_STARTED = 0x2,
		VOICE_STATE_PLAYING = 0x3,
		VOICE_STATE_STOP = 0x4,
		VOICE_STATE_RELEASE = 0x5,
		VOICE_STATE_FREE = 0x6,
		VOICE_STATE_DROPPED = 0x7,
	};

	enum SndFileLoadingState : __int32
	{
		SFLS_UNLOADED = 0x0,
		SFLS_LOADING = 0x1,
		SFLS_LOADED = 0x2,
	};

	enum snd_entity_update : __int32
	{
		SND_ENTITY_ALWAYS = 0x0,
		SND_ENTITY_ONCE = 0x1,
		SND_ENTITY_NEVER = 0x2,
	};

	enum SndLengthId : __int32
	{
		SndLengthNotify_Script = 0x0,
		SndLengthNotify_Subtitle = 0x1,
		SndLengthNotifyCount = 0x2,
	};

	enum snd_alias_system_t : __int32
	{
		SASYS_UI = 0x0,
		SASYS_CGAME = 0x1,
		SASYS_GAME = 0x2,
		SASYS_COUNT = 0x3,
	};

	enum WiiFilterPresetIndex : __int32
	{
		FILTER_NONE = 0x0,
		FILTER_DEFAULT = 0x1,
		FILTER_MENU = 0x2,
		FILTER_ADS = 0x3,
		FILTER_PRECISION = 0x4,
		FILTER_SCOPE = 0x5,
		FILTER_HIGH_SENS = 0x6,
		FILTER_MED_SENS = 0x7,
		FILTER_LOW_SENS = 0x8,
		FILTER_60_FPS = 0x9,
		FILTER_30_FPS = 0xA,
		FILTER_20_FPS = 0xB,
		FILTER_ZAPPER = 0xC,
		FILTER_DYN_RES_HIP = 0xD,
		FILTER_DYN_RES_ADS = 0xE,
		NUM_FILTER_PRESETS = 0xF,
	};

	enum profileWriteState_t : __int32
	{
		PROFILE_NO_WRITE = 0x0,
		PROFILE_WRITE_IF_CHANGED = 0x1,
	};

	enum VITVMode : __int32
	{
		VI_TVMODE_NTSC_INT = 0x0,
		VI_TVMODE_NTSC_DS = 0x1,
		VI_TVMODE_NTSC_PROG = 0x2,
		VI_TVMODE_PAL_INT = 0x4,
		VI_TVMODE_PAL_DS = 0x5,
		VI_TVMODE_EURGB60_INT = 0x14,
		VI_TVMODE_EURGB60_DS = 0x15,
		VI_TVMODE_EURGB60_PROG = 0x16,
		VI_TVMODE_MPAL_INT = 0x8,
		VI_TVMODE_MPAL_DS = 0x9,
		VI_TVMODE_MPAL_PROG = 0xA,
		VI_TVMODE_DEBUG_INT = 0xC,
		VI_TVMODE_DEBUG_PAL_INT = 0x10,
		VI_TVMODE_DEBUG_PAL_DS = 0x11,
	};

	enum VIXFBMode : __int32
	{
		VI_XFBMODE_SF = 0x0,
		VI_XFBMODE_DF = 0x1,
	};

	enum WiiError : __int32
	{
		WII_NO_ERROR = 0x0,
		WII_NO_DISC = 0x1,
		WII_WRONG_DISC = 0x2,
		WII_DISC_RETRY = 0x3,
		WII_DISC_FATAL = 0x4,
		WII_NAND_CORRUPT = 0x5,
		WII_NAND_NOSPACE = 0x6,
		WII_NAND_FAILED = 0x7,
		WII_NAND_UNKNOWN = 0x8,
		WII_RESET = 0x9,
	};

	enum HBMSelectBtnNum : unsigned __int32
	{
		HBM_SELECT_NULL = 0xFFFFFFFF,
		HBM_SELECT_HOMEBTN = 0x0,
		HBM_SELECT_BTN1 = 0x1,
		HBM_SELECT_BTN2 = 0x2,
		HBM_SELECT_BTN3 = 0x3,
		HBM_SELECT_BTN4 = 0x4,
		HBM_SELECT_MAX = 0x5,
	};

	enum MemcardOperation : __int32
	{
		MEMCARD_READ = 0x0,
		MEMCARD_WRITE = 0x1,
	};

	enum DeleteOp : __int32
	{
		DELETE_BANNER = 0x0,
		DELETE_PROFILES = 0x1,
		DELETE_CHECK_SPACE = 0x2,
		DELETE_CHECK_SPACE_END = 0x3,
		DELETE_END = 0x4,
	};

	enum CreateOp : __int32
	{
		CREATE_DELETE_BANNER = 0x0,
		CREATE_DELETE_PROFILES = 0x1,
		CREATE_CHECK_SPACE = 0x2,
		CREATE_CHECK_SPACE_END = 0x3,
		CREATE_CREATE_DIR = 0x4,
		CREATE_CREATE_FILE = 0x5,
		CREATE_OPEN_FILE = 0x6,
		CREATE_WRITE0_FILE = 0x7,
		CREATE_WRITE_FILE = 0x8,
		CREATE_CLOSE_FILE = 0x9,
		CREATE_CREATE_BANNER = 0xA,
		CREATE_OPEN_BANNER = 0xB,
		CREATE_WRITE_BANNER = 0xC,
		CREATE_CLOSE_BANNER = 0xD,
		CREATE_END = 0xE,
	};

	enum ZapperMenuRegion : __int32
	{
		ZAPPER_MENU_NONE = 0x0,
		ZAPPER_MENU_TOP = 0x1,
		ZAPPER_MENU_TOP_TOP = 0x2,
		ZAPPER_MENU_LEFT = 0x3,
		ZAPPER_MENU_RIGHT = 0x4,
		ZAPPER_MENU_BOTTOM = 0x5,
		ZAPPER_MENU_BOTTOM_BOTTOM = 0x6,
		ZAPPER_MENU_NUM = 0x7,
	};

	enum AsyncSOStartupState : __int32
	{
		ASYNC_SOSTARTUP_STATE_IDLE = 0x0,
		ASYNC_SOSTARTUP_STATE_REQUESTED = 0x1,
		ASYNC_SOSTARTUP_STATE_PROCESSING = 0x2,
		ASYNC_SOSTARTUP_STATE_DONE_SUCCESSFUL = 0x3,
		ASYNC_SOSTARTUP_STATE_DONE_FAIL = 0x4,
	};

	enum BaseLineState : __int32
	{
		BASELINE_NOT_FROM_BASELINE = 0x0,
		BASELINE_USED = 0x1,
		BASELINE_NULL = 0x2,
	};

	enum MovieToPlayScriptOp : __int32
	{
		MTPSOP_PLUS = 0x0,
		MTPSOP_MINUS = 0x1,
		MTPSOP_MUL = 0x2,
		MTPSOP_GT = 0x3,
		MTPSOP_LT = 0x4,
		MTPSOP_EQ = 0x5,
		MTPSOP_STRCMP = 0x6,
		MTPSOP_STRCAT = 0x7,
		MTPSOP_NOT = 0x8,
		MTPSOP_DUP = 0x9,
		MTPSOP_DROP = 0xA,
		MTPSOP_SWAP = 0xB,
		MTPSOP_GETDVAR = 0xC,
		MTPSOP_GETMAPNAME = 0xD,
		MTPSOP_IF = 0xE,
		MTPSOP_THEN = 0xF,
		MTPSOP_PLAY = 0x10,
		MTPSOP_LITERAL = 0x11,
		MTPSOP_COUNT = 0x12,
	};

	enum rankTableColumns_t : __int32
	{
		MP_RANKTABLE_RANKID = 0x0,
		MP_RANKTABLE_RANK = 0x1,
		MP_RANKTABLE_MINXP = 0x2,
		MP_RANKTABLE_XPTONEXT = 0x3,
		MP_RANKTABLE_SHORTRANK = 0x4,
		MP_RANKTABLE_FULLRANK = 0x5,
		MP_RANKTABLE_ICON = 0x6,
		MP_RANKTABLE_MAXXP = 0x7,
		MP_RANKTABLE_WEAPUNLOCK = 0x8,
		MP_RANKTABLE_PERKUNLOCK = 0x9,
		MP_RANKTABLE_CHALLENGE = 0xA,
		MP_RANKTABLE_CAMO = 0xB,
		MP_RANKTABLE_ATTACHMENT = 0xC,
		MP_RANKTABLE_LEVEL = 0xD,
		MP_RANKTABLE_DISPLAYLEVEL = 0xE,
		MP_RANKTABLE_COUNT = 0xF,
	};

	enum snd_stopsounds_arg_t : __int32
	{
		SND_STOP_ALL = 0x0,
		SND_KEEP_REVERB = 0x1,
		SND_KEEP_MUSIC = 0x2,
		SND_KEEP_AMBIENT = 0x4,
		SND_KEEP_MUSIC_AND_AMBIENT = 0x6,
		SND_STOP_STREAMED = 0x8,
		SND_KEEP_BUS_VOLUMES = 0x10,
	};

	enum snd_attenuation_factor_t : __int32
	{
		SND_ATTENUATION_ALIAS = 0x1,
		SND_ATTENUATION_START = 0x2,
		SND_ATTENUATION_BUS = 0x4,
		SND_ATTENUATION_DISTANCE = 0x8,
		SND_ATTENUATION_CYLINDER = 0x10,
		SND_ATTENUATION_FADE = 0x20,
		SND_ATTENUATION_GLOBAL = 0x40,
		SND_ATTENUATION_SLAVE = 0x80,
		SND_ATTENUATION_SCRIPT = 0x100,
		SND_ATTENUATION_LOS = 0x200,
		SND_ATTENUATION_TEAM = 0x400,
		SND_ATTENUATION_WETDRY = 0x800,
		SND_ATTENUATION_MENU = 0x1000,
		SND_ATTENUATION_PAD = 0x2000,
		SND_ATTENUATION_ALL = 0xFFFF,
	};

	enum snd_csv_entry_type : __int32
	{
		SND_CSV_STRING = 0x0,
		SND_CSV_FLOAT = 0x1,
		SND_CSV_INT = 0x2,
		SND_CSV_ENUM = 0x3,
	};

	enum snd_speaker_flag : __int32
	{
		SND_SPEAKER_FLAG_LEFT = 0x1,
		SND_SPEAKER_FLAG_RIGHT = 0x2,
		SND_SPEAKER_FLAG_CENTER = 0x4,
		SND_SPEAKER_FLAG_LFE = 0x8,
		SND_SPEAKER_FLAG_LEFT_SURROUND = 0x10,
		SND_SPEAKER_FLAG_RIGHT_SURROUND = 0x20,
		SND_SPEAKER_FLAG_LEFT_REAR_SURROUND = 0x40,
		SND_SPEAKER_FLAG_RIGHT_REAR_SURROUND = 0x80,
	};

	enum ShadowType : __int32
	{
		SHADOW_NONE = 0x0,
		SHADOW_COOKIE = 0x1,
		SHADOW_MAP = 0x2,
	};

	enum MaterialTechniqueType : __int32
	{
		TECHNIQUE_DEPTH_PREPASS = 0x0,
		TECHNIQUE_BUILD_FLOAT_Z = 0x1,
		TECHNIQUE_BUILD_SHADOWMAP_DEPTH = 0x2,
		TECHNIQUE_BUILD_SHADOWMAP_COLOR = 0x3,
		TECHNIQUE_UNLIT = 0x4,
		TECHNIQUE_EMISSIVE = 0x5,
		TECHNIQUE_EMISSIVE_SHADOW = 0x6,
		TECHNIQUE_EMISSIVE_REFLECTED = 0x7,
		TECHNIQUE_LIT_BEGIN = 0x8,
		TECHNIQUE_LIT = 0x8,
		TECHNIQUE_LIT_FADE = 0x9,
		TECHNIQUE_LIT_SUN = 0xA,
		TECHNIQUE_LIT_SUN_FADE = 0xB,
		TECHNIQUE_LIT_SUN_SHADOW = 0xC,
		TECHNIQUE_LIT_SUN_SHADOW_FADE = 0xD,
		TECHNIQUE_LIT_SPOT = 0xE,
		TECHNIQUE_LIT_SPOT_FADE = 0xF,
		TECHNIQUE_LIT_SPOT_SHADOW = 0x10,
		TECHNIQUE_LIT_SPOT_SHADOW_FADE = 0x11,
		TECHNIQUE_LIT_OMNI = 0x12,
		TECHNIQUE_LIT_OMNI_FADE = 0x13,
		TECHNIQUE_LIT_OMNI_SHADOW = 0x14,
		TECHNIQUE_LIT_OMNI_SHADOW_FADE = 0x15,
		TECHNIQUE_LIT_CHARRED = 0x16,
		TECHNIQUE_LIT_FADE_CHARRED = 0x17,
		TECHNIQUE_LIT_SUN_CHARRED = 0x18,
		TECHNIQUE_LIT_SUN_FADE_CHARRED = 0x19,
		TECHNIQUE_LIT_SUN_SHADOW_CHARRED = 0x1A,
		TECHNIQUE_LIT_SUN_SHADOW_FADE_CHARRED = 0x1B,
		TECHNIQUE_LIT_SPOT_CHARRED = 0x1C,
		TECHNIQUE_LIT_SPOT_FADE_CHARRED = 0x1D,
		TECHNIQUE_LIT_SPOT_SHADOW_CHARRED = 0x1E,
		TECHNIQUE_LIT_SPOT_SHADOW_FADE_CHARRED = 0x1F,
		TECHNIQUE_LIT_OMNI_CHARRED = 0x20,
		TECHNIQUE_LIT_OMNI_FADE_CHARRED = 0x21,
		TECHNIQUE_LIT_OMNI_SHADOW_CHARRED = 0x22,
		TECHNIQUE_LIT_OMNI_SHADOW_FADE_CHARRED = 0x23,
		TECHNIQUE_LIT_END = 0x24,
		TECHNIQUE_LIGHT_SPOT = 0x24,
		TECHNIQUE_LIGHT_OMNI = 0x25,
		TECHNIQUE_LIGHT_SPOT_SHADOW = 0x26,
		TECHNIQUE_LIGHT_SPOT_CHARRED = 0x27,
		TECHNIQUE_LIGHT_OMNI_CHARRED = 0x28,
		TECHNIQUE_LIGHT_SPOT_SHADOW_CHARRED = 0x29,
		TECHNIQUE_FAKELIGHT_NORMAL = 0x2A,
		TECHNIQUE_FAKELIGHT_VIEW = 0x2B,
		TECHNIQUE_SUNLIGHT_PREVIEW = 0x2C,
		TECHNIQUE_CASE_TEXTURE = 0x2D,
		TECHNIQUE_WIREFRAME_SOLID = 0x2E,
		TECHNIQUE_WIREFRAME_SHADED = 0x2F,
		TECHNIQUE_SHADOWCOOKIE_CASTER = 0x30,
		TECHNIQUE_SHADOWCOOKIE_RECEIVER = 0x31,
		TECHNIQUE_DEBUG_BUMPMAP = 0x32,
		TECHNIQUE_COUNT = 0x33,
		TECHNIQUE_TOTAL_COUNT = 0x34,
		TECHNIQUE_NONE = 0x35,
	};

	enum GfxRenderTargetId : __int32
	{
		R_RENDERTARGET_SAVED_SCREEN = 0x0,
		R_RENDERTARGET_FRAME_BUFFER = 0x1,
		R_RENDERTARGET_SCENE = 0x2,
		R_RENDERTARGET_RESOLVED_POST_SUN = 0x3,
		R_RENDERTARGET_RESOLVED_SCENE = 0x4,
		R_RENDERTARGET_FLOAT_Z = 0x5,
		R_RENDERTARGET_DYNAMICSHADOWS = 0x6,
		R_RENDERTARGET_SHADOWCOOKIE = 0x7,
		R_RENDERTARGET_SHADOWCOOKIE_BLUR = 0x8,
		R_RENDERTARGET_POST_EFFECT_SRC = 0x9,
		R_RENDERTARGET_POST_EFFECT_GODRAYS = 0xA,
		R_RENDERTARGET_POST_EFFECT_0 = 0xB,
		R_RENDERTARGET_POST_EFFECT_1 = 0xC,
		R_RENDERTARGET_SHADOWMAP_SUN = 0xD,
		R_RENDERTARGET_SHADOWMAP_SPOT = 0xE,
		R_RENDERTARGET_COUNT = 0xF,
		R_RENDERTARGET_NONE = 0x10,
	};

	enum GeomStreamLoadedGroupState : __int32
	{
		GEOMSTREAM_ACTIVE = 0x0,
		GEOMSTREAM_LOADING = 0x1,
		GEOMSTREAM_UNLOADING_WAIT = 0x2,
		GEOMSTREAM_UNLOADING = 0x3,
		GEOMSTREAM_DEFRAG_WAIT1 = 0x4,
		GEOMSTREAM_DEFRAG_WAIT2 = 0x5,
		GEOMSTREAM_DEFRAG = 0x6,
		GEOMSTREAM_EXTERNAL_ALLOC = 0x7,
		GEOMSTREAM_SENTINEL = 0x8,
	};

	enum GeomSetType : __int32
	{
		GEOMSET_BSP = 0x0,
		GEOMSET_XMODEL = 0x1,
		GEOMSET_COUNT = 0x2,
	};

	enum CinematicEnum : __int32
	{
		CINEMATIC_NOT_PAUSED = 0x0,
		CINEMATIC_PAUSED = 0x1,
	};

	enum CinematicThreadState : __int32
	{
		CINEMATIC_THREAD_STATE_FROM_HOST_GO = 0x0,
		CINEMATIC_THREAD_STATE_FROM_HOST_GO_BINK = 0x1,
		CINEMATIC_THREAD_STATE_TO_HOST_BETWEEN_UPDATES = 0x2,
		CINEMATIC_THREAD_STATE_TO_HOST_ENTERING_BINK = 0x3,
		CINEMATIC_THREAD_STATE_TO_HOST_EXITED_BINK = 0x4,
	};

	enum _GXTexFmt : __int32
	{
		GX_TF_I4 = 0x0,
		GX_TF_I8 = 0x1,
		GX_TF_IA4 = 0x2,
		GX_TF_IA8 = 0x3,
		GX_TF_RGB565 = 0x4,
		GX_TF_RGB5A3 = 0x5,
		GX_TF_RGBA8 = 0x6,
		GX_TF_CMPR = 0xE,
		GX_CTF_R4 = 0x20,
		GX_CTF_RA4 = 0x22,
		GX_CTF_RA8 = 0x23,
		GX_CTF_YUVA8 = 0x26,
		GX_CTF_A8 = 0x27,
		GX_CTF_R8 = 0x28,
		GX_CTF_G8 = 0x29,
		GX_CTF_B8 = 0x2A,
		GX_CTF_RG8 = 0x2B,
		GX_CTF_GB8 = 0x2C,
		GX_TF_Z8 = 0x11,
		GX_TF_Z16 = 0x13,
		GX_TF_Z24X8 = 0x16,
		GX_CTF_Z4 = 0x30,
		GX_CTF_Z8M = 0x39,
		GX_CTF_Z8L = 0x3A,
		GX_CTF_Z16L = 0x3C,
		GX_TF_A8 = 0x27,
	};

	enum _GXTexWrapMode : __int32
	{
		GX_CLAMP = 0x0,
		GX_REPEAT = 0x1,
		GX_MIRROR = 0x2,
		GX_MAX_TEXWRAPMODE = 0x3,
	};

	enum GfxViewMode : __int32
	{
		VIEW_MODE_NONE = 0x0,
		VIEW_MODE_3D = 0x1,
		VIEW_MODE_2D = 0x2,
		VIEW_MODE_IDENTITY = 0x3,
	};

	enum GfxViewportBehavior : __int32
	{
		GFX_USE_VIEWPORT_FOR_VIEW = 0x0,
		GFX_USE_VIEWPORT_FULL = 0x1,
	};

	enum MaterialVertexDeclType : __int32
	{
		VERTDECL_GENERIC = 0x0,
		VERTDECL_PACKED = 0x1,
		VERTDECL_WORLD = 0x2,
		VERTDECL_WORLD_T1N0 = 0x3,
		VERTDECL_WORLD_T1N1 = 0x4,
		VERTDECL_WORLD_T2N0 = 0x5,
		VERTDECL_WORLD_T2N1 = 0x6,
		VERTDECL_WORLD_T2N2 = 0x7,
		VERTDECL_WORLD_T3N0 = 0x8,
		VERTDECL_WORLD_T3N1 = 0x9,
		VERTDECL_WORLD_T3N2 = 0xA,
		VERTDECL_WORLD_T4N0 = 0xB,
		VERTDECL_WORLD_T4N1 = 0xC,
		VERTDECL_WORLD_T4N2 = 0xD,
		VERTDECL_POS_TEX = 0xE,
		VERTDECL_WATER = 0xF,
		VERTDECL_COUNT = 0x10,
	};

	enum GfxDepthRangeType : unsigned __int32
	{
		GFX_DEPTH_RANGE_SCENE = 0x0,
		GFX_DEPTH_RANGE_VIEWMODEL = 0x2,
		GFX_DEPTH_RANGE_FULL = 0xFFFFFFFF,
	};

	enum DpvsForceBevels : __int32
	{
		DPVS_DONT_FORCE_BEVELS = 0x0,
		DPVS_FORCE_BEVELS = 0x1,
	};

	enum DpvsClipChildren : __int32
	{
		DPVS_DONT_CLIP_CHILDREN = 0x0,
		DPVS_CLIP_CHILDREN = 0x1,
	};

	enum GfxDrawSceneMethod : __int32
	{
		GFX_DRAW_SCENE_NONE = 0x0,
		GFX_DRAW_SCENE_FULLBRIGHT = 0x1,
		GFX_DRAW_SCENE_DEBUGSHADER = 0x2,
		GFX_DRAW_SCENE_STANDARD = 0x3,
	};

	enum GfxTechCharredType : __int32
	{
		GFX_TECHNIQUE_NOT_CHARRED = 0x0,
		GFX_TECHNIQUE_CHARRED = 0x1,
		GFX_TECHNIQUE_CHARRED_TYPES = 0x2,
	};

	enum GfxFadeType : __int32
	{
		GFX_TECHNIQUE_NO_FADE = 0x0,
		GFX_TECHNIQUE_FADE = 0x1,
		GFX_TECHNIQUE_FADE_TYPES = 0x2,
	};

	enum LightHasShadowMap : __int32
	{
		LIGHT_HAS_SHADOWMAP = 0x0,
		LIGHT_HAS_NO_SHADOWMAP = 0x1,
	};

	enum ForceType : __int32
	{
		GRENADE_EXPLOSION = 0x0,
		NEAR_MUZZLE_SHAKE = 0x1,
	};

	enum ShakeForceState : __int32
	{
		GAINING = 0x0,
		MAINTAINING = 0x1,
		DECAYING = 0x2,
	};

	enum _GXAttrType : __int32
	{
		GX_NONE = 0x0,
		GX_DIRECT = 0x1,
		GX_INDEX8 = 0x2,
		GX_INDEX16 = 0x3,
	};

	enum _GXAttr : __int32
	{
		GX_VA_PNMTXIDX = 0x0,
		GX_VA_TEX0MTXIDX = 0x1,
		GX_VA_TEX1MTXIDX = 0x2,
		GX_VA_TEX2MTXIDX = 0x3,
		GX_VA_TEX3MTXIDX = 0x4,
		GX_VA_TEX4MTXIDX = 0x5,
		GX_VA_TEX5MTXIDX = 0x6,
		GX_VA_TEX6MTXIDX = 0x7,
		GX_VA_TEX7MTXIDX = 0x8,
		GX_VA_POS = 0x9,
		GX_VA_NRM = 0xA,
		GX_VA_CLR0 = 0xB,
		GX_VA_CLR1 = 0xC,
		GX_VA_TEX0 = 0xD,
		GX_VA_TEX1 = 0xE,
		GX_VA_TEX2 = 0xF,
		GX_VA_TEX3 = 0x10,
		GX_VA_TEX4 = 0x11,
		GX_VA_TEX5 = 0x12,
		GX_VA_TEX6 = 0x13,
		GX_VA_TEX7 = 0x14,
		GX_POS_MTX_ARRAY = 0x15,
		GX_NRM_MTX_ARRAY = 0x16,
		GX_TEX_MTX_ARRAY = 0x17,
		GX_LIGHT_ARRAY = 0x18,
		GX_VA_NBT = 0x19,
		GX_VA_MAX_ATTR = 0x1A,
		GX_VA_NULL = 0xFF,
	};

	enum MaterialUpdateFrequency : __int32
	{
		MTL_UPDATE_PER_PRIM = 0x0,
		MTL_UPDATE_PER_OBJECT = 0x1,
		MTL_UPDATE_RARELY = 0x2,
		MTL_UPDATE_CUSTOM = 0x3,
	};

	enum GfxProjectionTypes : __int32
	{
		GFX_PROJECTION_2D = 0x0,
		GFX_PROJECTION_3D = 0x1,
	};

	enum surfaceType_t : unsigned __int32
	{
		SF_TRIANGLES = 0x0,
		SF_BEGIN_STATICMODEL = 0x1,
		SF_STATICMODEL_RIGID = 0x1,
		SF_END_STATICMODEL = 0x2,
		SF_SIMPLE_FLAG = 0x2,
		SF_BMODEL = 0x3,
		SF_BEGIN_XMODEL = 0x4,
		SF_XMODEL_RIGID = 0x4,
		SF_XMODEL_SKINNED = 0x5,
		SF_XMODEL_WATER = 0x6,
		SF_END_XMODEL = 0x7,
		SF_SIMPLE_WATER = 0x7,
		SF_BEGIN_FX = 0x8,
		SF_CODE_MESH = 0x8,
		SF_MARK_MESH = 0x9,
		SF_PARTICLE_CLOUD = 0xA,
		SF_ROPE_MESH = 0xB,
		SF_END_FX = 0xC,
		SF_NUM_SURFACE_TYPES = 0xC,
		SF_FORCE_32_BITS = 0xFFFFFFFF,
	};

	enum AnimLodLevel : __int32
	{
		ANIMLOD_ANIMATED = 0x0,
		ANIMLOD_TRANSITION = 0x1,
		ANIMLOD_NONE = 0x2,
	};

	enum EStreamPriority : __int32
	{
		STREAM_PRIORITY_ZERO = 0x0,
		STREAM_PRIORITY_LOW = 0x1,
		STREAM_PRIORITY_MEDIUM = 0x2,
		STREAM_PRIORITY_HIGH = 0x3,
		STREAM_PRIORITY_FALLING_FROM_USE = 0x4,
		STREAM_PRIORITY_IN_USE = 0x5,
		STREAM_PRIORITY_COUNT = 0x6,
		STREAM_PRIORITY_INVALID = 0xFF,
	};

	enum GfxTevDstArg : __int32
	{
		GFX_TEV_DEST_PREV = 0x0,
		GFX_TEV_DEST_REG0 = 0x1,
		GFX_TEV_DEST_REG1 = 0x2,
		GFX_TEV_DEST_REG2 = 0x3,
	};

	enum _GXCompType : __int32
	{
		GX_U8 = 0x0,
		GX_S8 = 0x1,
		GX_U16 = 0x2,
		GX_S16 = 0x3,
		GX_F32 = 0x4,
		GX_RGB565 = 0x0,
		GX_RGB8 = 0x1,
		GX_RGBX8 = 0x2,
		GX_RGBA4 = 0x3,
		GX_RGBA6 = 0x4,
		GX_RGBA8 = 0x5,
	};

	enum gjk_retval_e : __int32
	{
		GJK_SEPARATED = 0x0,
		GJK_VALID = 0x1,
		GJK_PENETRATING = 0x2,
		GJK_INVALID = 0x3,
	};

	enum gpuPrimType : __int32
	{
		GPU_PRIM_POINTLIST = 0xB8,
		GPU_PRIM_LINELIST = 0xA8,
		GPU_PRIM_LINESTRIP = 0xB0,
		GPU_PRIM_TRIANGLELIST = 0x90,
		GPU_PRIM_TRIANGLESTRIP = 0x98,
		GPU_PRIM_TRIANGLEFAN = 0xA0,
		GPU_PRIM_QUADLIST = 0x80,
	};

	enum _GXPixelFmt : __int32
	{
		GX_PF_RGB8_Z24 = 0x0,
		GX_PF_RGBA6_Z24 = 0x1,
		GX_PF_RGB565_Z16 = 0x2,
		GX_PF_Z24 = 0x3,
		GX_PF_Y8 = 0x4,
		GX_PF_U8 = 0x5,
		GX_PF_V8 = 0x6,
		GX_PF_YUV420 = 0x7,
	};

	enum nglProjType : __int32
	{
		NGLPROJ_ORTHOGRAPHIC = 0x0,
		NGLPROJ_PERSPECTIVE = 0x1,
	};

	enum nglLightType : __int32
	{
		NGLLIGHT_POINT = 0x0,
		NGLLIGHT_DIRECTIONAL = 0x1,
		NGLLIGHT_PROJECTED_DIRECTIONAL = 0x2,
		NGLLIGHT_PROJECTED_SPOT = 0x3,
		NGLLIGHT_PROJECTED_PARALLEL = 0x4,
		NGLLIGHT_USER_FIRST = 0x5,
	};

	enum gpuAddressMode : __int32
	{
		GPU_ADDRESS_CLAMP = 0x0,
		GPU_ADDRESS_WRAP = 0x1,
		GPU_ADDRESS_MIRROR = 0x2,
	};

	enum gpuFilterMode : __int32
	{
		GPU_FILTER_POINT = 0x0,
		GPU_FILTER_LINEAR = 0x1,
		GPU_FILTER_ANISOTROPIC = 0x2,
	};

	enum _GXFogType : __int32
	{
		GX_FOG_NONE = 0x0,
		GX_FOG_PERSP_LIN = 0x2,
		GX_FOG_PERSP_EXP = 0x4,
		GX_FOG_PERSP_EXP2 = 0x5,
		GX_FOG_PERSP_REVEXP = 0x6,
		GX_FOG_PERSP_REVEXP2 = 0x7,
		GX_FOG_ORTHO_LIN = 0xA,
		GX_FOG_ORTHO_EXP = 0xC,
		GX_FOG_ORTHO_EXP2 = 0xD,
		GX_FOG_ORTHO_REVEXP = 0xE,
		GX_FOG_ORTHO_REVEXP2 = 0xF,
		GX_FOG_LIN = 0x2,
		GX_FOG_EXP = 0x4,
		GX_FOG_EXP2 = 0x5,
		GX_FOG_REVEXP = 0x6,
		GX_FOG_REVEXP2 = 0x7,
	};

	enum _GXTexMapID : __int32
	{
		GX_TEXMAP0 = 0x0,
		GX_TEXMAP1 = 0x1,
		GX_TEXMAP2 = 0x2,
		GX_TEXMAP3 = 0x3,
		GX_TEXMAP4 = 0x4,
		GX_TEXMAP5 = 0x5,
		GX_TEXMAP6 = 0x6,
		GX_TEXMAP7 = 0x7,
		GX_MAX_TEXMAP = 0x8,
		GX_TEXMAP_NULL = 0xFF,
		GX_TEX_DISABLE = 0x100,
	};

	enum nglSortType : __int32
	{
		NGLSORT_OPAQUE = 0x0,
		NGLSORT_TRANSLUCENT = 0x1,
	};

	enum nglNodeType : __int32
	{
		NGLNODE_SCENE = 0x0,
		NGLNODE_CUSTOM = 0x1,
	};

	enum _GXCullMode : __int32
	{
		GX_CULL_NONE = 0x0,
		GX_CULL_FRONT = 0x1,
		GX_CULL_BACK = 0x2,
		GX_CULL_ALL = 0x3,
	};

	enum _GXTevRegID : __int32
	{
		GX_TEVPREV = 0x0,
		GX_TEVREG0 = 0x1,
		GX_TEVREG1 = 0x2,
		GX_TEVREG2 = 0x3,
		GX_MAX_TEVREG = 0x4,
	};

	enum _GXTevSwapSel : __int32
	{
		GX_TEV_SWAP0 = 0x0,
		GX_TEV_SWAP1 = 0x1,
		GX_TEV_SWAP2 = 0x2,
		GX_TEV_SWAP3 = 0x3,
		GX_MAX_TEVSWAP = 0x4,
	};

	enum _GXTevScale : __int32
	{
		GX_CS_SCALE_1 = 0x0,
		GX_CS_SCALE_2 = 0x1,
		GX_CS_SCALE_4 = 0x2,
		GX_CS_DIVIDE_2 = 0x3,
		GX_MAX_TEVSCALE = 0x4,
	};

	enum _GXTevBias : __int32
	{
		GX_TB_ZERO = 0x0,
		GX_TB_ADDHALF = 0x1,
		GX_TB_SUBHALF = 0x2,
		GX_MAX_TEVBIAS = 0x3,
	};

	enum _GXTevOp : __int32
	{
		GX_TEV_ADD = 0x0,
		GX_TEV_SUB = 0x1,
		GX_TEV_COMP_R8_GT = 0x8,
		GX_TEV_COMP_R8_EQ = 0x9,
		GX_TEV_COMP_GR16_GT = 0xA,
		GX_TEV_COMP_GR16_EQ = 0xB,
		GX_TEV_COMP_BGR24_GT = 0xC,
		GX_TEV_COMP_BGR24_EQ = 0xD,
		GX_TEV_COMP_RGB8_GT = 0xE,
		GX_TEV_COMP_RGB8_EQ = 0xF,
		GX_TEV_COMP_A8_GT = 0xE,
		GX_TEV_COMP_A8_EQ = 0xF,
	};

	enum _GXTevAlphaArg : __int32
	{
		GX_CA_APREV = 0x0,
		GX_CA_A0 = 0x1,
		GX_CA_A1 = 0x2,
		GX_CA_A2 = 0x3,
		GX_CA_TEXA = 0x4,
		GX_CA_RASA = 0x5,
		GX_CA_KONST = 0x6,
		GX_CA_ZERO = 0x7,
		GX_CA_ONE = 0x6,
	};

	enum _GXTevColorArg : __int32
	{
		GX_CC_CPREV = 0x0,
		GX_CC_APREV = 0x1,
		GX_CC_C0 = 0x2,
		GX_CC_A0 = 0x3,
		GX_CC_C1 = 0x4,
		GX_CC_A1 = 0x5,
		GX_CC_C2 = 0x6,
		GX_CC_A2 = 0x7,
		GX_CC_TEXC = 0x8,
		GX_CC_TEXA = 0x9,
		GX_CC_RASC = 0xA,
		GX_CC_RASA = 0xB,
		GX_CC_ONE = 0xC,
		GX_CC_HALF = 0xD,
		GX_CC_KONST = 0xE,
		GX_CC_ZERO = 0xF,
		GX_CC_TEXRRR = 0x10,
		GX_CC_TEXGGG = 0x11,
		GX_CC_TEXBBB = 0x12,
		GX_CC_QUARTER = 0xE,
	};

	enum _GXTevKAlphaSel : __int32
	{
		GX_TEV_KASEL_8_8 = 0x0,
		GX_TEV_KASEL_7_8 = 0x1,
		GX_TEV_KASEL_6_8 = 0x2,
		GX_TEV_KASEL_5_8 = 0x3,
		GX_TEV_KASEL_4_8 = 0x4,
		GX_TEV_KASEL_3_8 = 0x5,
		GX_TEV_KASEL_2_8 = 0x6,
		GX_TEV_KASEL_1_8 = 0x7,
		GX_TEV_KASEL_1 = 0x0,
		GX_TEV_KASEL_3_4 = 0x2,
		GX_TEV_KASEL_1_2 = 0x4,
		GX_TEV_KASEL_1_4 = 0x6,
		GX_TEV_KASEL_K0_R = 0x10,
		GX_TEV_KASEL_K1_R = 0x11,
		GX_TEV_KASEL_K2_R = 0x12,
		GX_TEV_KASEL_K3_R = 0x13,
		GX_TEV_KASEL_K0_G = 0x14,
		GX_TEV_KASEL_K1_G = 0x15,
		GX_TEV_KASEL_K2_G = 0x16,
		GX_TEV_KASEL_K3_G = 0x17,
		GX_TEV_KASEL_K0_B = 0x18,
		GX_TEV_KASEL_K1_B = 0x19,
		GX_TEV_KASEL_K2_B = 0x1A,
		GX_TEV_KASEL_K3_B = 0x1B,
		GX_TEV_KASEL_K0_A = 0x1C,
		GX_TEV_KASEL_K1_A = 0x1D,
		GX_TEV_KASEL_K2_A = 0x1E,
		GX_TEV_KASEL_K3_A = 0x1F,
	};

	enum _GXTevKColorSel : __int32
	{
		GX_TEV_KCSEL_8_8 = 0x0,
		GX_TEV_KCSEL_7_8 = 0x1,
		GX_TEV_KCSEL_6_8 = 0x2,
		GX_TEV_KCSEL_5_8 = 0x3,
		GX_TEV_KCSEL_4_8 = 0x4,
		GX_TEV_KCSEL_3_8 = 0x5,
		GX_TEV_KCSEL_2_8 = 0x6,
		GX_TEV_KCSEL_1_8 = 0x7,
		GX_TEV_KCSEL_1 = 0x0,
		GX_TEV_KCSEL_3_4 = 0x2,
		GX_TEV_KCSEL_1_2 = 0x4,
		GX_TEV_KCSEL_1_4 = 0x6,
		GX_TEV_KCSEL_K0 = 0xC,
		GX_TEV_KCSEL_K1 = 0xD,
		GX_TEV_KCSEL_K2 = 0xE,
		GX_TEV_KCSEL_K3 = 0xF,
		GX_TEV_KCSEL_K0_R = 0x10,
		GX_TEV_KCSEL_K1_R = 0x11,
		GX_TEV_KCSEL_K2_R = 0x12,
		GX_TEV_KCSEL_K3_R = 0x13,
		GX_TEV_KCSEL_K0_G = 0x14,
		GX_TEV_KCSEL_K1_G = 0x15,
		GX_TEV_KCSEL_K2_G = 0x16,
		GX_TEV_KCSEL_K3_G = 0x17,
		GX_TEV_KCSEL_K0_B = 0x18,
		GX_TEV_KCSEL_K1_B = 0x19,
		GX_TEV_KCSEL_K2_B = 0x1A,
		GX_TEV_KCSEL_K3_B = 0x1B,
		GX_TEV_KCSEL_K0_A = 0x1C,
		GX_TEV_KCSEL_K1_A = 0x1D,
		GX_TEV_KCSEL_K2_A = 0x1E,
		GX_TEV_KCSEL_K3_A = 0x1F,
	};

	enum _GXChannelID : __int32
	{
		GX_COLOR0 = 0x0,
		GX_COLOR1 = 0x1,
		GX_ALPHA0 = 0x2,
		GX_ALPHA1 = 0x3,
		GX_COLOR0A0 = 0x4,
		GX_COLOR1A1 = 0x5,
		GX_COLOR_ZERO = 0x6,
		GX_ALPHA_BUMP = 0x7,
		GX_ALPHA_BUMPN = 0x8,
		GX_COLOR_NULL = 0xFF,
	};

	enum _GXTexCoordID : __int32
	{
		GX_TEXCOORD0 = 0x0,
		GX_TEXCOORD1 = 0x1,
		GX_TEXCOORD2 = 0x2,
		GX_TEXCOORD3 = 0x3,
		GX_TEXCOORD4 = 0x4,
		GX_TEXCOORD5 = 0x5,
		GX_TEXCOORD6 = 0x6,
		GX_TEXCOORD7 = 0x7,
		GX_MAX_TEXCOORD = 0x8,
		GX_TEXCOORD_NULL = 0xFF,
	};

	enum _GXTexGenSrc : __int32
	{
		GX_TG_POS = 0x0,
		GX_TG_NRM = 0x1,
		GX_TG_BINRM = 0x2,
		GX_TG_TANGENT = 0x3,
		GX_TG_TEX0 = 0x4,
		GX_TG_TEX1 = 0x5,
		GX_TG_TEX2 = 0x6,
		GX_TG_TEX3 = 0x7,
		GX_TG_TEX4 = 0x8,
		GX_TG_TEX5 = 0x9,
		GX_TG_TEX6 = 0xA,
		GX_TG_TEX7 = 0xB,
		GX_TG_TEXCOORD0 = 0xC,
		GX_TG_TEXCOORD1 = 0xD,
		GX_TG_TEXCOORD2 = 0xE,
		GX_TG_TEXCOORD3 = 0xF,
		GX_TG_TEXCOORD4 = 0x10,
		GX_TG_TEXCOORD5 = 0x11,
		GX_TG_TEXCOORD6 = 0x12,
		GX_TG_COLOR0 = 0x13,
		GX_TG_COLOR1 = 0x14,
	};

	enum _GXTexGenType : __int32
	{
		GX_TG_MTX3x4 = 0x0,
		GX_TG_MTX2x4 = 0x1,
		GX_TG_BUMP0 = 0x2,
		GX_TG_BUMP1 = 0x3,
		GX_TG_BUMP2 = 0x4,
		GX_TG_BUMP3 = 0x5,
		GX_TG_BUMP4 = 0x6,
		GX_TG_BUMP5 = 0x7,
		GX_TG_BUMP6 = 0x8,
		GX_TG_BUMP7 = 0x9,
		GX_TG_SRTG = 0xA,
	};

	enum _GXAttnFn : __int32
	{
		GX_AF_SPEC = 0x0,
		GX_AF_SPOT = 0x1,
		GX_AF_NONE = 0x2,
	};

	enum _GXDiffuseFn : __int32
	{
		GX_DF_NONE = 0x0,
		GX_DF_SIGN = 0x1,
		GX_DF_CLAMP = 0x2,
	};

	enum _GXColorSrc : __int32
	{
		GX_SRC_REG = 0x0,
		GX_SRC_VTX = 0x1,
	};

	enum _GXCompCnt : __int32
	{
		GX_POS_XY = 0x0,
		GX_POS_XYZ = 0x1,
		GX_NRM_XYZ = 0x0,
		GX_NRM_NBT = 0x1,
		GX_NRM_NBT3 = 0x2,
		GX_CLR_RGB = 0x0,
		GX_CLR_RGBA = 0x1,
		GX_TEX_S = 0x0,
		GX_TEX_ST = 0x1,
	};

	enum _GXZFmt16 : __int32
	{
		GX_ZC_LINEAR = 0x0,
		GX_ZC_NEAR = 0x1,
		GX_ZC_MID = 0x2,
		GX_ZC_FAR = 0x3,
	};

	enum _GXFBClamp : __int32
	{
		GX_CLAMP_NONE = 0x0,
		GX_CLAMP_TOP = 0x1,
		GX_CLAMP_BOTTOM = 0x2,
	};

	enum nglPaletteFormat : __int32
	{
		NGLPAL_L8A8 = 0x0,
		NGLPAL_R5G6B5 = 0x1,
		NGLPAL_RGB5A3 = 0x2,
	};

	enum _GXIndTexScale : __int32
	{
		GX_ITS_1 = 0x0,
		GX_ITS_2 = 0x1,
		GX_ITS_4 = 0x2,
		GX_ITS_8 = 0x3,
		GX_ITS_16 = 0x4,
		GX_ITS_32 = 0x5,
		GX_ITS_64 = 0x6,
		GX_ITS_128 = 0x7,
		GX_ITS_256 = 0x8,
		GX_MAX_ITSCALE = 0x9,
	};

	enum _GXTexMtx : __int32
	{
		GX_TEXMTX0 = 0x1E,
		GX_TEXMTX1 = 0x21,
		GX_TEXMTX2 = 0x24,
		GX_TEXMTX3 = 0x27,
		GX_TEXMTX4 = 0x2A,
		GX_TEXMTX5 = 0x2D,
		GX_TEXMTX6 = 0x30,
		GX_TEXMTX7 = 0x33,
		GX_TEXMTX8 = 0x36,
		GX_TEXMTX9 = 0x39,
		GX_IDENTITY = 0x3C,
	};

	enum nglColorChannel : __int32
	{
		NGL_COLOR0A0 = 0x0,
		NGL_COLOR1A1 = 0x1,
		NGL_COLOR0 = 0x0,
		NGL_COLOR1 = 0x1,
		NGL_ALPHA0 = 0x0,
		NGL_ALPHA1 = 0x1,
		NGL_COLOR_ZERO = 0x7,
		NGL_ALPHA_BUMP = 0x5,
		NGL_ALPHA_BUMPN = 0x6,
		NGL_COLOR_NULL = 0x7,
	};

	enum _GXIndTexAlphaSel : __int32
	{
		GX_ITBA_OFF = 0x0,
		GX_ITBA_S = 0x1,
		GX_ITBA_T = 0x2,
		GX_ITBA_U = 0x3,
		GX_MAX_ITBALPHA = 0x4,
	};

	enum nflRequestID : unsigned __int32
	{
		NFL_REQUEST_ID_INVALID = 0xFFFFFFFF,
		NFL_REQUEST_ID_FORCE32 = 0x7FFFFFFF,
	};

	enum nflStreamID : unsigned __int32
	{
		NFL_STREAM_ID_INVALID = 0xFFFFFFFF,
		NFL_STREAM_ID_DEFAULT = 0x0,
		NFL_STREAM_ID_FORCE32 = 0x7FFFFFFF,
	};

	enum nflRequestState : unsigned __int32
	{
		NFL_REQUEST_STATE_INVALID = 0xFFFFFFFF,
		NFL_REQUEST_STATE_COMPLETED = 0x0,
		NFL_REQUEST_STATE_CANCELED = 0x1,
		NFL_REQUEST_STATE_TIMEOUT = 0x2,
		NFL_REQUEST_STATE_ERROR = 0x3,
		NFL_REQUEST_STATE_ACTIVE = 0x4,
	};

	enum nflRequestType : unsigned __int32
	{
		NFL_REQUEST_TYPE_INVALID = 0xFFFFFFFF,
		NFL_REQUEST_TYPE_READ = 0x0,
		NFL_REQUEST_TYPE_WRITE = 0x1,
	};

	enum nflPriority : unsigned __int32
	{
		NFL_PRIORITY_INVALID = 0xFFFFFFFF,
		NFL_PRIORITY_LOWEST = 0x0,
		NFL_PRIORITY_LOW = 0x1,
		NFL_PRIORITY_NORMAL = 0x2,
		NFL_PRIORITY_HIGH = 0x3,
		NFL_PRIORITY_HIGHEST = 0x4,
	};

	enum nfdError : unsigned __int32
	{
		NFD_ERROR_FORCE32 = 0x7FFFFFFF,
		NFD_ERROR_INVALID = 0xFFFFFFFF,
		NFD_ERROR_NOERROR = 0x0,
		NFD_ERROR_FAILURE = 0x1,
		NFD_ERROR_EOF = 0x2,
		NFD_ERROR_UNALIGNED_ACCESS = 0x3,
		NFD_ERROR_INVALID_MEDIA = 0x4,
		NFD_ERROR_INVALID_STATE = 0x5,
		NFD_ERROR_INVALID_FLAGS = 0x6,
		NFD_ERROR_INVALID_FILENAME = 0x7,
		NFD_ERROR_INVALID_ARGUMENTS = 0x8,
	};

	enum nfdMediaState : unsigned __int32
	{
		NFD_MEDIA_STATE_FORCE32 = 0x7FFFFFFF,
		NFD_MEDIA_STATE_INVALID = 0xFFFFFFFF,
		NFD_MEDIA_STATE_LOADING = 0x0,
		NFD_MEDIA_STATE_LOADED = 0x1,
		NFD_MEDIA_STATE_LOADFAILED = 0x2,
		NFD_MEDIA_STATE_UNLOADING = 0x3,
		NFD_MEDIA_STATE_UNLOADED = 0x4,
	};

	enum nfdFileFlags : unsigned __int32
	{
		NFD_FILE_FLAGS_FORCE32 = 0x7FFFFFFF,
		NFD_FILE_FLAGS_INVALID = 0xFFFFFFFF,
		NFD_FILE_FLAGS_READ = 0x1,
		NFD_FILE_FLAGS_WRITE = 0x2,
		NFD_FILE_FLAGS_CREATE = 0x4,
		NFD_FILE_FLAGS_ASYNC_OPEN = 0x8,
	};

	enum nfdIoState : unsigned __int32
	{
		NFD_IO_STATE_FORCE32 = 0x7FFFFFFF,
		NFD_IO_STATE_INVALID = 0xFFFFFFFF,
		NFD_IO_STATE_IDLE = 0x0,
		NFD_IO_STATE_WORKING = 0x1,
		NFD_IO_STATE_WORKDONE = 0x2,
		NFD_IO_STATE_CANCELING = 0x3,
		NFD_IO_STATE_CANCELED = 0x4,
		NFD_IO_STATE_ERROR = 0x5,
	};

	enum txSlot : unsigned __int32
	{
		TX_SLOT_INVALID = 0xFFFFFFFF,
		TX_SLOT_FORCE32 = 0x7FFFFFFF,
	};

	enum nfsRequestState : __int32
	{
		NFS_REQUEST_STATE_WAITING = 0x0,
		NFS_REQUEST_STATE_WORKING = 0x1,
		NFS_REQUEST_STATE_WORKDONE = 0x2,
		NFS_REQUEST_STATE_CANCELING = 0x3,
		NFS_REQUEST_STATE_CANCELED = 0x4,
		NFS_REQUEST_STATE_TIMEOUT = 0x5,
		NFS_REQUEST_STATE_IO_ERROR = 0x6,
		NFS_REQUEST_STATE_IO_ERROR_WAITING = 0x7,
	};

	enum nfsFileType : __int32
	{
		NFS_FILE_TYPE_NATIVE = 0x0,
		NFS_FILE_TYPE_SUBFILE = 0x1,
	};

	enum _enum : unsigned __int32
	{
		TX_SLOT_INVALID_0 = 0xFFFFFFFF,
		TX_SLOT_FORCE32_0 = 0x7FFFFFFF,
	};

	enum kbutton_buttons
	{
		KB_LEFT = 0x0,
		KB_RIGHT = 0x1,
		KB_FORWARD = 0x2,
		KB_BACKWARD = 0x3,
		KB_LOOKUP = 0x4,
		KB_LOOKDOWN = 0x5,
		KB_MOVELEFT = 0x6,
		KB_MOVERIGHT = 0x7,
		KB_STRAFE = 0x8,
		KB_SPEED = 0x9,
		KB_STAND = 0xA,
		KB_CROUCH = 0xB,
		KB_GOSTAND = 0xC,
		KB_MLOOK = 0xD,
		KB_ATTACK = 0xE,
		KB_BREATH = 0xF,
		KB_FRAG = 0x10,
		KB_SMOKE = 0x11,
		KB_MELEE = 0x12,
		KB_ACTIVATE = 0x13,
		KB_RELOAD = 0x14,
		KB_USERELOAD = 0x15,
		KB_LEANLEFT = 0x16,
		KB_LEANRIGHT = 0x17,
		KB_PRONE = 0x18,
		KB_THROW = 0x1A,
		KB_SPRINT = 0x1B,
		KB_TALK = 0x1D,
	};

	enum eAutoMeleeState
	{
		AMS_NOT_ACTIVE = 0x0,
		AMS_TARGET_AQUIRED = 0x1,
		AMS_TARGETING = 0x2,
	};

	enum ClientEvents_e
	{
		EV_NONE = 0x0,
		EV_FOLIAGE_SOUND = 0x1,
		EV_STOP_WEAPON_SOUND = 0x2,
		EV_STOP_SOUND_ALIAS = 0x3,
		EV_SOUND_ALIAS = 0x4,
		EV_SOUND_ALIAS_AS_MASTER = 0x5,
		EV_SOUND_BATTLECHAT_ALIAS = 0x6,
		EV_STOPSOUNDS = 0x7,
		EV_STANCE_FORCE_STAND = 0x8,
		EV_STANCE_FORCE_CROUCH = 0x9,
		EV_STANCE_FORCE_PRONE = 0xA,
		EV_ITEM_PICKUP = 0xB,
		EV_AMMO_PICKUP = 0xC,
		EV_NOAMMO = 0xD,
		EV_EMPTYCLIP = 0xE,
		EV_EMPTY_OFFHAND = 0xF,
		EV_RESET_ADS = 0x10,
		EV_RELOAD = 0x11,
		EV_RELOAD_FROM_EMPTY = 0x12,
		EV_RELOAD_START = 0x13,
		EV_RELOAD_END = 0x14,
		EV_RELOAD_START_NOTIFY = 0x15,
		EV_RELOAD_ADDAMMO = 0x16,
		EV_RAISE_WEAPON = 0x17,
		EV_FIRST_RAISE_WEAPON = 0x18,
		EV_PUTAWAY_WEAPON = 0x19,
		EV_WEAPON_ALT = 0x1A,
		EV_PULLBACK_WEAPON = 0x1B,
		EV_FIRE_WEAPON = 0x1C,
		EV_FIRE_WEAPON_LASTSHOT = 0x1D,
		EV_RECHAMBER_WEAPON = 0x1E,
		EV_EJECT_BRASS = 0x1F,
		EV_MELEE_SWIPE = 0x20,
		EV_FIRE_MELEE = 0x21,
		EV_WEAPON_DEPLOYING = 0x22,
		EV_WEAPON_FINISH_DEPLOYING = 0x23,
		EV_WEAPON_BREAKING_DOWN = 0x24,
		EV_WEAPON_FINISH_BREAKING_DOWN = 0x25,
		EV_PREP_OFFHAND = 0x26,
		EV_USE_OFFHAND = 0x27,
		EV_SWITCH_OFFHAND = 0x28,
		EV_MELEE_HIT = 0x29,
		EV_MELEE_MISS = 0x2A,
		EV_MELEE_BLOOD = 0x2B,
		EV_FIRE_WEAPON_MG42 = 0x2C,
		EV_FIRE_QUADBARREL_1 = 0x2D,
		EV_FIRE_QUADBARREL_2 = 0x2E,
		EV_BULLET_TRACER = 0x2F,
		EV_SOUND_ALIAS_NOTIFY = 0x30,
		EV_SOUND_ALIAS_NOTIFY_AS_MASTER = 0x31,
		EV_SOUND_ALIAS_ADD_NOTIFY = 0x32,
		EV_BULLET_HIT = 0x33,
		EV_BULLET_HIT_CLIENT_SMALL = 0x34,
		EV_BULLET_HIT_CLIENT_LARGE = 0x35,
		EV_DESTRUCTIBLE_BULLET_HIT = 0x36,
		EV_DESTRUCTIBLE_EXPLOSION_HIT = 0x37,
		EV_GRENADE_BOUNCE = 0x38,
		EV_GRENADE_EXPLODE = 0x39,
		EV_ROCKET_EXPLODE = 0x3A,
		EV_ROCKET_EXPLODE_NOMARKS = 0x3B,
		EV_FLASHBANG_EXPLODE = 0x3C,
		EV_CUSTOM_EXPLODE = 0x3D,
		EV_CUSTOM_EXPLODE_NOMARKS = 0x3E,
		EV_CHANGE_TO_DUD = 0x3F,
		EV_DUD_EXPLODE = 0x40,
		EV_DUD_IMPACT = 0x41,
		EV_FIRE_EXPLODE = 0x42,
		EV_MOLOTOV_FLOAT = 0x43,
		EV_BULLET = 0x44,
		EV_PLAY_FX = 0x45,
		EV_PLAY_FX_ON_TAG = 0x46,
		EV_PHYS_EXPLOSION_SPHERE = 0x47,
		EV_PHYS_EXPLOSION_CYLINDER = 0x48,
		EV_PHYS_EXPLOSION_JOLT = 0x49,
		EV_PHYS_LAUNCH = 0x4A,
		EV_CREATE_DYNENT = 0x4B,
		EV_CREATE_ROPE = 0x4C,
		EV_BLOOD_IMPACTS = 0x4D,
		EV_DETACH_ENTITY = 0x4E,
		EV_BREAK_ROPE = 0x4F,
		EV_DELETE_ROPE = 0x50,
		EV_TANNING = 0x51,
		EV_SETWETNESS = 0x52,
		EV_STOP_BURNING = 0x53,
		EV_EARTHQUAKE = 0x54,
		EV_GRENADE_DROP = 0x55,
		EV_GRENADE_SUICIDE = 0x56,
		EV_DETONATE = 0x57,
		EV_NIGHTVISION_WEAR = 0x58,
		EV_NIGHTVISION_REMOVE = 0x59,
		EV_NO_FRAG_GRENADE_HINT = 0x5A,
		EV_NO_SPECIAL_GRENADE_HINT = 0x5B,
		EV_TARGET_TOO_CLOSE_HINT = 0x5C,
		EV_TARGET_NOT_ENOUGH_CLEARANCE = 0x5D,
		EV_LOCKON_REQUIRED_HINT = 0x5E,
		EV_FOOTSTEP_SPRINT = 0x5F,
		EV_FOOTSTEP_RUN = 0x60,
		EV_FOOTSTEP_WALK = 0x61,
		EV_FOOTSTEP_PRONE = 0x62,
		EV_JUMP = 0x63,
		EV_LANDING_DEFAULT = 0x64,
		EV_LANDING_BARK = 0x65,
		EV_LANDING_BRICK = 0x66,
		EV_LANDING_CARPET = 0x67,
		EV_LANDING_CLOTH = 0x68,
		EV_LANDING_CONCRETE = 0x69,
		EV_LANDING_DIRT = 0x6A,
		EV_LANDING_FLESH = 0x6B,
		EV_LANDING_FOLIAGE = 0x6C,
		EV_LANDING_GLASS = 0x6D,
		EV_LANDING_GRASS = 0x6E,
		EV_LANDING_GRAVEL = 0x6F,
		EV_LANDING_ICE = 0x70,
		EV_LANDING_METAL = 0x71,
		EV_LANDING_MUD = 0x72,
		EV_LANDING_PAPER = 0x73,
		EV_LANDING_PLASTER = 0x74,
		EV_LANDING_ROCK = 0x75,
		EV_LANDING_SAND = 0x76,
		EV_LANDING_SNOW = 0x77,
		EV_LANDING_WATER = 0x78,
		EV_LANDING_WOOD = 0x79,
		EV_LANDING_ASPHALT = 0x7A,
		EV_LANDING_CERAMIC = 0x7B,
		EV_LANDING_PLASTIC = 0x7C,
		EV_LANDING_RUBBER = 0x7D,
		EV_LANDING_CUSHION = 0x7E,
		EV_LANDING_FRUIT = 0x7F,
		EV_LANDING_PAINTEDMETAL = 0x80,
		EV_LANDING_PLAYER = 0x81,
		EV_LANDING_TALLGRASS = 0x82,
		EV_LANDING_PAIN_DEFAULT = 0x83,
		EV_LANDING_PAIN_BARK = 0x84,
		EV_LANDING_PAIN_BRICK = 0x85,
		EV_LANDING_PAIN_CARPET = 0x86,
		EV_LANDING_PAIN_CLOTH = 0x87,
		EV_LANDING_PAIN_CONCRETE = 0x88,
		EV_LANDING_PAIN_DIRT = 0x89,
		EV_LANDING_PAIN_FLESH = 0x8A,
		EV_LANDING_PAIN_FOLIAGE = 0x8B,
		EV_LANDING_PAIN_GLASS = 0x8C,
		EV_LANDING_PAIN_GRASS = 0x8D,
		EV_LANDING_PAIN_GRAVEL = 0x8E,
		EV_LANDING_PAIN_ICE = 0x8F,
		EV_LANDING_PAIN_METAL = 0x90,
		EV_LANDING_PAIN_MUD = 0x91,
		EV_LANDING_PAIN_PAPER = 0x92,
		EV_LANDING_PAIN_PLASTER = 0x93,
		EV_LANDING_PAIN_ROCK = 0x94,
		EV_LANDING_PAIN_SAND = 0x95,
		EV_LANDING_PAIN_SNOW = 0x96,
		EV_LANDING_PAIN_WATER = 0x97,
		EV_LANDING_PAIN_WOOD = 0x98,
		EV_LANDING_PAIN_ASPHALT = 0x99,
		EV_LANDING_PAIN_CERAMIC = 0x9A,
		EV_LANDING_PAIN_PLASTIC = 0x9B,
		EV_LANDING_PAIN_RUBBER = 0x9C,
		EV_LANDING_PAIN_CUSHION = 0x9D,
		EV_LANDING_PAIN_FRUIT = 0x9E,
		EV_LANDING_PAIN_PAINTEDMETAL = 0x9F,
		EV_LANDING_PAIN_PLAYER = 0xA0,
		EV_LANDING_PAIN_TALLGRASS = 0xA1,
		EV_FIRE_VEHICLE_TURRET = 0xA2,
		EV_FIRE_GUNNER_1 = 0xA3,
		EV_FIRE_GUNNER_2 = 0xA4,
		EV_FIRE_GUNNER_3 = 0xA5,
		EV_FIRE_GUNNER_4 = 0xA6,
		EV_FIRE_GUNNER_1A = 0xA7,
		EV_FIRE_GUNNER_2A = 0xA8,
		EV_FIRE_GUNNER_3A = 0xA9,
		EV_FIRE_GUNNER_4A = 0xAA,
		EV_START_CAMERA_TWEEN = 0xAB,
		EV_DESTRUCTIBLE_DISABLE_PIECES = 0xAC,
		EV_FOOTPRINT = 0xAD,
		EV_MANTLE = 0xAE,
		EV_CANNOTPLANT = 0xAF,
	};

	enum contents_e
	{
		CONTENTS_SOLID = 0x1,
		CONTENTS_FOLIAGE = 0x2,
		CONTENTS_NONCOLLIDING = 0x4,
		CONTENTS_GLASS = 0x10,
		CONTENTS_WATER = 0x20,
		CONTENTS_CANSHOOTCLIP = 0x40,
		CONTENTS_MISSILECLIP = 0x80,
		CONTENTS_ITEM = 0x100,
		CONTENTS_VEHICLECLIP = 0x200,
		CONTENTS_ITEMCLIP = 0x400,
		CONTENTS_SKY = 0x800,
		CONTENTS_AI_NOSIGHT = 0x1000,
		CONTENTS_CLIPSHOT = 0x2000,
		CONTENTS_CORPSE_CLIPSHOT = 0x4000,
		CONTENTS_ACTOR = 0x8000,
		CONTENTS_FAKE_ACTOR = 0x8000,
		CONTENTS_PLAYERCLIP = 0x10000,
		CONTENTS_MONSTERCLIP = 0x20000,
		CONTENTS_PLAYERVEHICLECLIP = 0x40000,
		CONTENTS_USE = 0x200000,
		CONTENTS_UTILITYCLIP = 0x400000,
		CONTENTS_VEHICLE = 0x800000,
		CONTENTS_MANTLE = 0x1000000,
		CONTENTS_PLAYER = 0x2000000,
		CONTENTS_CORPSE = 0x4000000,
		CONTENTS_DETAIL = 0x8000000,
		CONTENTS_STRUCTURAL = 0x10000000,
		CONTENTS_LOOKAT = 0x10000000,
		CONTENTS_TRIGGER = 0x40000000,
		CONTENTS_NODROP = 0x80000000,
	};

	enum pmflags_t
	{
		PMF_PRONE = 0x1,
		PMF_MANTLE = 0x4,
		PMF_LADDER = 0x8,
		PMF_BACKWARDS_RUN = 0x20,
		PMF_RESPAWNED = 0x400,
		PMF_JUMPING = 0x4000,
		PMF_SPRINTING = 0x8000,
		PMF_VEHICLE_ATTACHED = 0x100000,
	};

	enum LumpType : __int32
	{
		LUMP_MATERIALS = 0x0,
		LUMP_LIGHTBYTES_COMPRESSED = 0x1,
		LUMP_LIGHTGRIDENTRIES = 0x2,
		LUMP_LIGHTGRIDCOLORS = 0x3,
		LUMP_PLANES = 0x4,
		LUMP_BRUSHSIDES = 0x5,
		LUMP_BRUSHSIDEEDGECOUNTS = 0x6,
		LUMP_BRUSHEDGES = 0x7,
		LUMP_BRUSHES = 0x8,
		LUMP_TRIANGLES = 0x9,
		LUMP_DRAWVERTS = 0xA,
		LUMP_DRAWINDICES = 0xB,
		LUMP_CULLGROUPS = 0xC,
		LUMP_CULLGROUPINDICES = 0xD,
		LUMP_LIGHTBYTES_UNCOMPRESSED = 0xE,
		LUMP_OBSOLETE_2 = 0xF,
		LUMP_OBSOLETE_3 = 0x10,
		LUMP_OBSOLETE_4 = 0x11,
		LUMP_OBSOLETE_5 = 0x12,
		LUMP_PORTALVERTS = 0x13,
		LUMP_OBSOLETE_6 = 0x14,
		LUMP_UINDS = 0x15,
		LUMP_BRUSHVERTSCOUNTS = 0x16,
		LUMP_BRUSHVERTS = 0x17,
		LUMP_AABBTREES = 0x18,
		LUMP_CELLS = 0x19,
		LUMP_PORTALS = 0x1A,
		LUMP_NODES = 0x1B,
		LUMP_LEAFS = 0x1C,
		LUMP_LEAFBRUSHES = 0x1D,
		LUMP_LEAFSURFACES = 0x1E,
		LUMP_COLLISIONVERTS = 0x1F,
		LUMP_COLLISIONTRIS = 0x20,
		LUMP_COLLISIONEDGEWALKABLE = 0x21,
		LUMP_COLLISIONBORDERS = 0x22,
		LUMP_COLLISIONPARTITIONS = 0x23,
		LUMP_COLLISIONAABBS = 0x24,
		LUMP_MODELS = 0x25,
		LUMP_VISIBILITY = 0x26,
		LUMP_ENTITIES = 0x27,
		LUMP_PATHCONNECTIONS = 0x28,
		LUMP_REFLECTION_PROBES = 0x29,
		LUMP_VERTEX_LAYER_DATA = 0x2A,
		LUMP_PRIMARY_LIGHTS = 0x2B,
		LUMP_LIGHTGRIDHEADER = 0x2C,
		LUMP_LIGHTGRIDROWS = 0x2D,
		LUMP_OBSOLETE_10 = 0x2E,
		LUMP_OBSOLETE_11 = 0x2F,
		LUMP_OBSOLETE_12 = 0x30,
		LUMP_OBSOLETE_13 = 0x31,
		LUMP_OBSOLETE_14 = 0x32,
		LUMP_OBSOLETE_15 = 0x33,
		LUMP_UNUSED1 = 0x34,
		LUMP_UNUSED2 = 0x35,
		LUMP_UNUSED3 = 0x36,
		LUMP_UNUSED4 = 0x37,
		LUMP_UNUSED5 = 0x38,
		LUMP_UNUSED6 = 0x39,
		LUMP_SIMPLELIGHTMAPBYTES = 0x3A,
		LUMP_UNUSED7 = 0x3B,
		LUMP_UNUSED8 = 0x3C,
		LUMP_UNUSED9 = 0x3D,
		LUMP_LIGHTREGIONS = 0x3E,
		LUMP_LIGHTREGION_HULLS = 0x3F,
		LUMP_LIGHTREGION_AXES = 0x40,
		LUMP_UNUSED10 = 0x41,
		LUMP_LIGHTGRID2D_LIGHTS = 0x42,
		LUMP_LIGHTGRID2D_INDICES = 0x43,
		LUMP_LIGHTGRID2D_POINTS = 0x44,
		LUMP_LIGHTGRID2D_CELLS = 0x45,
		LUMP_LIGHT_CORONAS = 0x46,
		LUMP_SHADOWMAP_VOLUMES = 0x47,
		LUMP_SHADOWMAP_VOLUME_PLANES = 0x48,
		LUMP_EXPOSURE_VOLUMES = 0x49,
		LUMP_EXPOSURE_VOLUME_PLANES = 0x4A,
		LUMP_WORLDFOG_VOLUMES = 0x4B,
		LUMP_WORLDFOG_VOLUME_PLANES = 0x4C,
		LUMP_VISION_VOLUMES = 0x4D,
		LUMP_VISION_VOLUME_PLANES = 0x4E,
		LUMP_OCCLUDERS = 0x4F,
		LUMP_OUTDOORBOUNDS = 0x50,
		LUMP_HERO_ONLY_LIGHTS = 0x51,
		LUMP_STATIC_MODEL_DATA = 0x52,
		LUMP_SKY_GRID_VOLUMES = 0x53,
		LUMP_LIGHTING_INFO = 0x54,
		LUMP_SMODEL_LIGHTMAP_VCOLORS = 0x55,
		LUMP_SMODEL_LIGHTMAP_VC_INSTS = 0x56,
		LUMP_SIEGE_SKIN_MODEL_INSTS = 0x57,
		LUMP_LIGHTGRIDCOEFFS = 0x58,
		LUMP_LUT_VOLUMES = 0x59,
		LUMP_LUT_VOLUME_PLANES = 0x5A,
		LUMP_WORLDFOG_MODIFIER_VOLUMES = 0x5B,
		LUMP_WORLDFOG_MODIFIER_VOLUME_PLANES = 0x5C,
		LUMP_COUNT = 0x5D,
	};

	enum ai_animmode_t
	{
		AI_ANIM_UNKNOWN = 0x0,
		AI_ANIM_MOVE_CODE = 0x1,
		AI_ANIM_USE_POS_DELTAS = 0x2,
		AI_ANIM_USE_ANGLE_DELTAS = 0x3,
		AI_ANIM_USE_BOTH_DELTAS = 0x4,
		AI_ANIM_USE_BOTH_DELTAS_NOCLIP = 0x5,
		AI_ANIM_USE_BOTH_DELTAS_NOGRAVITY = 0x6,
		AI_ANIM_USE_BOTH_DELTAS_ZONLY_PHYSICS = 0x7,
		AI_ANIM_NOPHYSICS = 0x8,
		AI_ANIM_POINT_RELATIVE = 0x9,
	};

	enum ai_orient_mode_t
	{
		AI_ORIENT_INVALID = 0x0,
		AI_ORIENT_DONT_CHANGE = 0x1,
		AI_ORIENT_TO_MOTION = 0x2,
		AI_ORIENT_TO_ENEMY = 0x3,
		AI_ORIENT_TO_ENEMY_OR_MOTION = 0x4,
		AI_ORIENT_TO_ENEMY_OR_MOTION_SIDESTEP = 0x5,
		AI_ORIENT_TO_GOAL = 0x6,
		AI_ORIENT_COUNT = 0x7,
	};

	enum fsMode_t : __int32
	{
		FS_READ = 0x0,
		FS_WRITE = 0x1,
		FS_APPEND = 0x2,
		FS_APPEND_SYNC = 0x3,
	};

	enum button_mask : __int32
	{
		KEY_FIRE = 0x1,
		KEY_SPRINT = 0x2,
		KEY_MELEE = 0x4,
		KEY_USE = 0x8,
		KEY_RELOAD = 0x10,
		KEY_USERELOAD = 0x20,
		KEY_LEANLEFT = 0x40,
		KEY_LEANRIGHT = 0x80,
		KEY_PRONE = 0x100,
		KEY_CROUCH = 0x200,
		KEY_GOSTAND = 0x400,
		KEY_ADSMODE = 0x800,
		KEY_TEMP = 0x1000,
		KEY_HOLDBREATH = 0x2000,
		KEY_FRAG = 0x4000,
		KEY_SMOKE = 0x8000,
		KEY_SELECTING_LOCATION = 0x10000,
		KEY_CANCEL_LOCATION = 0x20000,
		KEY_NIGHTVISION = 0x40000,
		KEY_ADS = 0x80000,
		KEY_REVERSE = 0x100000,
		KEY_HANDBRAKE = 0x200000,
		KEY_THROW = 0x400000,
		KEY_INMENU = 0x800000,
		KEY_UNK6 = 0x1000000,
		KEY_UNK7 = 0x2000000,
		KEY_UNK8 = 0x2000000,
		KEY_UNK9 = 0x4000000,
		KEY_UNK10 = 0x8000000,
	};

	enum LocalClientNum_t : unsigned __int32
	{
		INVALID_LOCAL_CLIENT = 0xFFFFFFFF,
		LOCAL_CLIENT_FIRST = 0x0,
		LOCAL_CLIENT_0 = 0x0,
		ONLY_LOCAL_CLIENT = 0x0,
		LOCAL_CLIENT_COUNT = 0x1,
	};

	enum FsListBehavior_e
	{
		FS_LIST_PURE_ONLY = 0x0,
		FS_LIST_ALL = 0x1,
	};

	enum CriticalSection : __int32
	{
		CRITSECT_CONSOLE = 0x2,
		CRITSECT_DEBUG_SOCKET = 0x3,
		CRITSECT_COM_ERROR = 0x4,
		CRITSECT_SCRIPT_STRING = 0xB,
		CRITSECT_MEMORY_TREE = 0xC,
		CRITSECT_SYS_EVENT_QUEUE = 0xE,
		CRITSECT_PHYSICS_UPDATE = 0x15,
		CRITSECT_CINEMATIC = 0x19,
		CRITSECT_CINEMATIC_TARGET_CHANGE = 0x1A,
		CRITSECT_CBUF = 0x2A,
		CRITSECT_COUNT = 0x2F,
	};

	enum weapFieldType_t
	{
		WFT_WEAPONTYPE = 0xC,
		WFT_WEAPONCLASS = 0xD,
		WFT_OVERLAYRETICLE = 0xE,
		WFT_PENETRATE_TYPE = 0xF,
		WFT_IMPACT_TYPE = 0x10,
		WFT_STANCE = 0x11,
		WFT_PROJ_EXPLOSION = 0x12,
		WFT_OFFHAND_CLASS = 0x13,
		WFT_OFFHAND_SLOT = 0x14,
		WFT_ACTIVE_RETICLE_TYPE = 0x15,
		WFT_GUIDED_MISSILE_TYPE = 0x16,
		WFT_BOUNCE_SOUND = 0x17,
		WFT_STICKINESS = 0x18,
		WFT_OVERLAYINTERFACE = 0x19,
		WFT_INVENTORYTYPE = 0x1A,
		WFT_FIRETYPE = 0x1B,
		WFT_CLIPTYPE = 0x1C,
		WFT_AMMOCOUNTER_CLIPTYPE = 0x1D,
		WFT_ICONRATIO_HUD = 0x1E,
		WFT_ICONRATIO_AMMOCOUNTER = 0x1F,
		WFT_ICONRATIO_KILL = 0x20,
		WFT_ICONRATIO_DPAD = 0x21,
		WFT_HIDETAGS = 0x22,
		WFT_NOTETRACKSOUNDMAP = 0x23,
		WFT_NUM_FIELD_TYPES = 0x24,
	};

	enum csParseFieldType_t
	{
		CSPFT_STRING = 0x0,
		CSPFT_STRING_MAX_STRING_CHARS = 0x1,
		CSPFT_STRING_MAX_QPATH = 0x2,
		CSPFT_STRING_MAX_OSPATH = 0x3,
		CSPFT_INT = 0x4,
		CSPFT_BOOL = 0x5,
		CSPFT_FLOAT = 0x6,
		CSPFT_MILLISECONDS = 0x7,
		CSPFT_FX = 0x8,
		CSPFT_XMODEL = 0x9,
		CSPFT_MATERIAL = 0xA,
		CSPFT_MATERIAL_STREAM = 0xB,
		CSPFT_PHYS_PRESET = 0xC,
		CSPFT_SCRIPT_STRING = 0xD,
		CSPFT_NUM_BASE_FIELD_TYPES = 0xE,
	};

	enum GfxRenderCommand : __int16
	{
		RC_END_OF_LIST = 0x0,
		RC_SET_CUSTOM_CONSTANT = 0x1,
		RC_SET_MATERIAL_COLOR = 0x2,
		RC_SAVE_SCREEN = 0x3,
		RC_SAVE_SCREEN_SECTION = 0x4,
		RC_CLEAR_SCREEN = 0x5,
		RC_SET_VIEWPORT = 0x6,
		RC_SET_SCISSOR = 0x7,
		RC_RESOLVE_COMPOSITE = 0x8,
		RC_PC_COPY_IMAGE_GEN_MIP = 0x9,
		RC_FIRST_NONCRITICAL = 0xA,
		RC_STRETCH_PIC = 0xA,
		RC_STRETCH_PIC_FLIP_ST = 0xB,
		RC_STRETCH_PIC_ROTATE_XY = 0xC,
		RC_STRETCH_PIC_ROTATE_ST = 0xD,
		RC_STRETCH_RAW = 0xE,
		RC_DRAW_QUAD_PIC = 0xF,
		RC_DRAW_FULL_SCREEN_COLORED_QUAD = 0x10,
		RC_DRAW_TEXT_2D = 0x11,
		RC_DRAW_TEXT_3D = 0x12,
		RC_BLEND_SAVED_SCREEN_BLURRED = 0x13,
		RC_BLEND_SAVED_SCREEN_FLASHED = 0x14,
		RC_DRAW_POINTS = 0x15,
		RC_DRAW_LINES = 0x16,
		RC_DRAW_TRIANGLES = 0x17,
		RC_DRAW_QUADLIST_2D = 0x18,
		RC_DRAW_EMBLEM_LAYER = 0x19,
		RC_STRETCH_COMPOSITE = 0x1A,
		RC_PROJECTION_SET = 0x1B,
		RC_DRAW_FRAMED = 0x1C,
		RC_COUNT = 0x1D,
	};

	enum HudelemFontTypes
	{
		HE_FONT_DEFAULT = 0x0,
		HE_FONT_BIGFIXED = 0x1,
		HE_FONT_SMALLFIXED = 0x2,
		HE_FONT_OBJECTIVE = 0x3,
		HE_FONT_BIG = 0x4,
		HE_FONT_SMALL = 0x5,
		HE_FONT_COUNT = 0x6,
	};

	enum hudelem_flags_t : __int32
	{
		HE_FLAG_NONE = 0x0,
		HE_FLAG_FOREGROUND = 0x1,
		HE_FLAG_HIDEWHENDEAD = 0x2,
		HE_FLAG_HIDEWHENINMENU = 0x4,
		HE_FLAG_SHADOWED = 0x8,
		HE_FLAG_SHADOWEDMORE = 0x10,
		HE_FLAG_SET3DFONTUSEGLOWCOLOR = 0x20,
	};

	enum FF_DIR
	{
		FFD_DEFAULT = 0x0,
		FFD_MOD_DIR = 0x1,
		FFD_USER_MAP = 0x2,
	};

	enum block_state : __int32
	{
		need_more = 0x0,
		block_done = 0x1,
		finish_started = 0x2,
		finish_done = 0x3,
	};

	enum hudelem_update_t
	{
		HUDELEM_UPDATE_ARCHIVAL = 0x1,
		HUDELEM_UPDATE_CURRENT = 0x2,
		HUDELEM_UPDATE_ARCHIVAL_AND_CURRENT = 0x3,
	};

	enum sourceType_e
	{
		SOURCE_TYPE_BREAKPOINT = 0x1,
		SOURCE_TYPE_CALL = 0x2,
		SOURCE_TYPE_THREAD_START = 0x4,
		SOURCE_TYPE_BUILTIN_CALL = 0x8,
		SOURCE_TYPE_NOTIFY = 0x10,
	};

	enum animBodyPart_t
	{
		ANIM_BP_UNUSED = 0x0,
		ANIM_BP_LEGS = 0x1,
		ANIM_BP_TORSO = 0x2,
		ANIM_BP_BOTH = 0x3,
		NUM_ANIM_BODYPARTS = 0x4,
	};

#ifdef __cplusplus
}
#endif
